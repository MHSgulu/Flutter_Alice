name: alice
description: A new Flutter application.


# 下面定义应用程序的版本和内部版本号。
# 版本号是由点分隔的三个数字，如1.2.43
# 后跟一个可选的内部版本号，由+分隔。
# 在flutter中，版本和生成器号都可以被重写
# 分别通过指定--build name和--build number来生成。
# 在Android中，build name用作versionName，build number用作versionCode。
# 有关Android版本控制的详细信息，请访问 https://developer.android.com/studio/publish/versioning
# 在iOS中，build name用作CFBundleShortVersionString，build number用作CFBundleVersion。
# 有关iOS版本控制的详细信息，请访问
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 1.0.0+1

environment:
  sdk: ">=2.1.0 <3.0.0"

dependencies:
  flutter:
    sdk: flutter

  # 下面将Cupertino图标字体添加到应用程序中。用于iOS风格图标的CupertinoIcons类。
  cupertino_icons: ^0.1.2

  device_info: ^0.4.2+1

  # http请求 官方库
  http: ^0.12.0+4

  # Dart的功能强大的Http客户端，它支持拦截器，FormData，请求取消，文件下载，超时等。
  dio: ^3.0.9

  # 定义json_serializable用来创建JSON序列化和反序列化代码的注释。
  json_annotation: ^3.0.1

  # Flutter插件，用于在移动平台中启动URL。支持iOS和Android。
  url_launcher: ^5.4.2

  # Photo View提供了一个手势敏感的可缩放小部件。Photo View主要用于显示交互图像和SVG等其他内容。
  photo_view: ^0.9.2

  # Dart代码中的透明图像，表示为Uint8List。
  transparent_image: ^1.0.0

  # Flutter库可加载和缓存网络图像。也可以与占位符和错误小部件一起使用
  cached_network_image: ^2.2.0

  # 用于Flutter的Toast库，可在单行代码中轻松创建Toast消息
  fluttertoast: ^4.0.0

  # 提供上拉加载和下拉刷新
  pull_to_refresh: ^1.5.7

  # 用于将静态html标签呈现为Flutter小部件。
  flutter_html: ^0.11.1

  # 轮播图
  flutter_swiper: ^1.1.6

  # Flutter软件包,用于从源图像生成调色板颜色。
  palette_generator: ^0.2.2

  # Flutter的视频播放器，带有Cupertino和Material播放控件
  chewie: ^0.9.10

  # 官方Flutter插件，用于与Android和iOS上的其他Flutter小部件一起显示嵌入式视频。
  video_player: ^0.10.9+1


dev_dependencies:
  flutter_test:
    sdk: flutter

#  flutterpluginsimple:
#    path: ./flutter_plugin_simple

  build_runner: ^1.8.1
  json_serializable: ^3.2.5


# 有关此文件的一般Dart部分的信息，请参见下页
# https://dart.dev/tools/pub/pubspec

# 以下部分是Flutter专用的 .
flutter:

  # 下一行确保应用程序中包含“材质图标”字体，以便可以使用“材质图标”类中的图标。
  uses-material-design: true

  # 注意: 由于 yaml 文件对缩进严格，所以必须严格按照每一层两个空格的方式进行缩进，此处assets前面应有两个空格。
  assets:
    - images/icon_news.png
    - images/icon_movie.png
    - images/icon_fun.png
    - images/icon_more.png
  # 要向应用程序添加资产，请添加资产部分，如下所示：
  # assets:
  #  - images/a_dot_burr.jpeg
  #  - images/a_dot_ham.jpeg

  # 图像资源可以引用一个或多个分辨率特定的“变体”，请参见
  # https://flutter.dev/assets-and-images/#resolution-aware.

  # 有关从包依赖项添加资产的详细信息，请参见
  # https://flutter.dev/assets-and-images/#from-packages

  # 要将自定义字体添加到应用程序中，请在此“颤振”部分添加字体部分。
  # 这个列表中的每个条目都应该有一个“family”键和一个“fonts”键，其中的列表给出了字体的资产和其他描述符。
  # 例如:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # 有关包依赖项中字体的详细信息,请参见
  # https://flutter.dev/custom-fonts/#from-packages
