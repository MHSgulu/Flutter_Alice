// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
import 'package:alice/model/movie_stills_entity.dart';
import 'package:alice/generated/json/movie_stills_entity_helper.dart';
import 'package:alice/model/mobie_phone_entity.dart';
import 'package:alice/generated/json/mobie_phone_entity_helper.dart';
import 'package:alice/model/wallpaper_entity.dart';
import 'package:alice/generated/json/wallpaper_entity_helper.dart';
import 'package:alice/model/bird_wallpaper_entity.dart';
import 'package:alice/generated/json/bird_wallpaper_entity_helper.dart';
import 'package:alice/model/search_news_entity.dart';
import 'package:alice/generated/json/search_news_entity_helper.dart';
import 'package:alice/model/quotation_entity.dart';
import 'package:alice/generated/json/quotation_entity_helper.dart';
import 'package:alice/model/garbage_c_a_i_entity.dart';
import 'package:alice/generated/json/garbage_c_a_i_entity_helper.dart';
import 'package:alice/model/bird_wallpaper_category_entity.dart';
import 'package:alice/generated/json/bird_wallpaper_category_entity_helper.dart';
import 'package:alice/model/short_film_review_entity.dart';
import 'package:alice/generated/json/short_film_review_entity_helper.dart';
import 'package:alice/model/picture_joke_entity.dart';
import 'package:alice/generated/json/picture_joke_entity_helper.dart';
import 'package:alice/model/written_jokes_entity.dart';
import 'package:alice/generated/json/written_jokes_entity_helper.dart';
import 'package:alice/model/wallpaper_category_entity.dart';
import 'package:alice/generated/json/wallpaper_category_entity_helper.dart';
import 'package:alice/model/m_t_movie_detail_entity.dart';
import 'package:alice/generated/json/m_t_movie_detail_entity_helper.dart';
import 'package:alice/model/moive_details_entity.dart';
import 'package:alice/generated/json/moive_details_entity_helper.dart';
import 'package:alice/model/film_maker_works_entity.dart';
import 'package:alice/generated/json/film_maker_works_entity_helper.dart';
import 'package:alice/model/film_maker_work_entity.dart';
import 'package:alice/generated/json/film_maker_work_entity_helper.dart';
import 'package:alice/model/hot_word_type_entity.dart';
import 'package:alice/generated/json/hot_word_type_entity_helper.dart';
import 'package:alice/model/film_maker_entity.dart';
import 'package:alice/generated/json/film_maker_entity_helper.dart';
import 'package:alice/model/article_entity.dart';
import 'package:alice/generated/json/article_entity_helper.dart';
import 'package:alice/model/news_entity.dart';
import 'package:alice/generated/json/news_entity_helper.dart';
import 'package:alice/model/real_time_hotspot_entity.dart';
import 'package:alice/generated/json/real_time_hotspot_entity_helper.dart';
import 'package:alice/model/gif_picture_jokes_entity.dart';
import 'package:alice/generated/json/gif_picture_jokes_entity_helper.dart';
import 'package:alice/model/film_maker_album_entity.dart';
import 'package:alice/generated/json/film_maker_album_entity_helper.dart';
import 'package:alice/model/mtime_hot_movie_entity.dart';
import 'package:alice/generated/json/mtime_hot_movie_entity_helper.dart';
import 'package:alice/model/movie_crew_entity.dart';
import 'package:alice/generated/json/movie_crew_entity_helper.dart';
import 'package:alice/model/movie_entity.dart';
import 'package:alice/generated/json/movie_entity_helper.dart';

class JsonConvert<T> {
	T fromJson(Map<String, dynamic> json) {
		return _getFromJson<T>(runtimeType, this, json);
	}

  Map<String, dynamic> toJson() {
		return _getToJson<T>(runtimeType, this);
  }

  static _getFromJson<T>(Type type, data, json) {
    switch (type) {
			case MovieStillsEntity:
				return movieStillsEntityFromJson(data as MovieStillsEntity, json) as T;
			case MovieStillsPhoto:
				return movieStillsPhotoFromJson(data as MovieStillsPhoto, json) as T;
			case MovieStillsPhotosAuthor:
				return movieStillsPhotosAuthorFromJson(data as MovieStillsPhotosAuthor, json) as T;
			case MovieStillsSubject:
				return movieStillsSubjectFromJson(data as MovieStillsSubject, json) as T;
			case MovieStillsSubjectRating:
				return movieStillsSubjectRatingFromJson(data as MovieStillsSubjectRating, json) as T;
			case MovieStillsSubjectRatingDetails:
				return movieStillsSubjectRatingDetailsFromJson(data as MovieStillsSubjectRatingDetails, json) as T;
			case MovieStillsSubjectCast:
				return movieStillsSubjectCastFromJson(data as MovieStillsSubjectCast, json) as T;
			case MovieStillsSubjectCastsAvatars:
				return movieStillsSubjectCastsAvatarsFromJson(data as MovieStillsSubjectCastsAvatars, json) as T;
			case MovieStillsSubjectDirector:
				return movieStillsSubjectDirectorFromJson(data as MovieStillsSubjectDirector, json) as T;
			case MovieStillsSubjectDirectorsAvatars:
				return movieStillsSubjectDirectorsAvatarsFromJson(data as MovieStillsSubjectDirectorsAvatars, json) as T;
			case MovieStillsSubjectImages:
				return movieStillsSubjectImagesFromJson(data as MovieStillsSubjectImages, json) as T;
			case MobiePhoneEntity:
				return mobiePhoneEntityFromJson(data as MobiePhoneEntity, json) as T;
			case MobiePhoneResult:
				return mobiePhoneResultFromJson(data as MobiePhoneResult, json) as T;
			case MobiePhoneResultResult:
				return mobiePhoneResultResultFromJson(data as MobiePhoneResultResult, json) as T;
			case WallpaperEntity:
				return wallpaperEntityFromJson(data as WallpaperEntity, json) as T;
			case WallpaperRes:
				return wallpaperResFromJson(data as WallpaperRes, json) as T;
			case WallpaperResVertical:
				return wallpaperResVerticalFromJson(data as WallpaperResVertical, json) as T;
			case BirdWallpaperEntity:
				return birdWallpaperEntityFromJson(data as BirdWallpaperEntity, json) as T;
			case BirdWallpaperData:
				return birdWallpaperDataFromJson(data as BirdWallpaperData, json) as T;
			case SearchNewsEntity:
				return searchNewsEntityFromJson(data as SearchNewsEntity, json) as T;
			case SearchNewsResult:
				return searchNewsResultFromJson(data as SearchNewsResult, json) as T;
			case SearchNewsResultResult:
				return searchNewsResultResultFromJson(data as SearchNewsResultResult, json) as T;
			case SearchNewsResultResultList:
				return searchNewsResultResultListFromJson(data as SearchNewsResultResultList, json) as T;
			case QuotationEntity:
				return quotationEntityFromJson(data as QuotationEntity, json) as T;
			case QuotationShowapiResBody:
				return quotationShowapiResBodyFromJson(data as QuotationShowapiResBody, json) as T;
			case QuotationShowapiResBodyData:
				return quotationShowapiResBodyDataFromJson(data as QuotationShowapiResBodyData, json) as T;
			case GarbageCAIEntity:
				return garbageCAIEntityFromJson(data as GarbageCAIEntity, json) as T;
			case GarbageCAIResult:
				return garbageCAIResultFromJson(data as GarbageCAIResult, json) as T;
			case GarbageCAIResultResult:
				return garbageCAIResultResultFromJson(data as GarbageCAIResultResult, json) as T;
			case GarbageCAIResultResultGarbageInfo:
				return garbageCAIResultResultGarbageInfoFromJson(data as GarbageCAIResultResultGarbageInfo, json) as T;
			case BirdWallpaperCategoryEntity:
				return birdWallpaperCategoryEntityFromJson(data as BirdWallpaperCategoryEntity, json) as T;
			case BirdWallpaperCategoryData:
				return birdWallpaperCategoryDataFromJson(data as BirdWallpaperCategoryData, json) as T;
			case ShortFilmReviewEntity:
				return shortFilmReviewEntityFromJson(data as ShortFilmReviewEntity, json) as T;
			case ShortFilmReviewCommants:
				return shortFilmReviewCommantsFromJson(data as ShortFilmReviewCommants, json) as T;
			case ShortFilmReviewCommentsRating:
				return shortFilmReviewCommentsRatingFromJson(data as ShortFilmReviewCommentsRating, json) as T;
			case ShortFilmReviewCommentsAuthor:
				return shortFilmReviewCommentsAuthorFromJson(data as ShortFilmReviewCommentsAuthor, json) as T;
			case ShortFilmReviewSubject:
				return shortFilmReviewSubjectFromJson(data as ShortFilmReviewSubject, json) as T;
			case ShortFilmReviewSubjectRating:
				return shortFilmReviewSubjectRatingFromJson(data as ShortFilmReviewSubjectRating, json) as T;
			case ShortFilmReviewSubjectRatingDetails:
				return shortFilmReviewSubjectRatingDetailsFromJson(data as ShortFilmReviewSubjectRatingDetails, json) as T;
			case ShortFilmReviewSubjectCast:
				return shortFilmReviewSubjectCastFromJson(data as ShortFilmReviewSubjectCast, json) as T;
			case ShortFilmReviewSubjectCastsAvatars:
				return shortFilmReviewSubjectCastsAvatarsFromJson(data as ShortFilmReviewSubjectCastsAvatars, json) as T;
			case ShortFilmReviewSubjectDirector:
				return shortFilmReviewSubjectDirectorFromJson(data as ShortFilmReviewSubjectDirector, json) as T;
			case ShortFilmReviewSubjectDirectorsAvatars:
				return shortFilmReviewSubjectDirectorsAvatarsFromJson(data as ShortFilmReviewSubjectDirectorsAvatars, json) as T;
			case ShortFilmReviewSubjectImages:
				return shortFilmReviewSubjectImagesFromJson(data as ShortFilmReviewSubjectImages, json) as T;
			case PictureJokeEntity:
				return pictureJokeEntityFromJson(data as PictureJokeEntity, json) as T;
			case PictureJokeResult:
				return pictureJokeResultFromJson(data as PictureJokeResult, json) as T;
			case PictureJokeResultShowapiResBody:
				return pictureJokeResultShowapiResBodyFromJson(data as PictureJokeResultShowapiResBody, json) as T;
			case PictureJokeResultShowapiResBodyContentlist:
				return pictureJokeResultShowapiResBodyContentlistFromJson(data as PictureJokeResultShowapiResBodyContentlist, json) as T;
			case WrittenJokesEntity:
				return writtenJokesEntityFromJson(data as WrittenJokesEntity, json) as T;
			case WrittenJokesResult:
				return writtenJokesResultFromJson(data as WrittenJokesResult, json) as T;
			case WrittenJokesResultShowapiResBody:
				return writtenJokesResultShowapiResBodyFromJson(data as WrittenJokesResultShowapiResBody, json) as T;
			case WrittenJokesResultShowapiResBodyContentlist:
				return writtenJokesResultShowapiResBodyContentlistFromJson(data as WrittenJokesResultShowapiResBodyContentlist, json) as T;
			case WallpaperCategoryEntity:
				return wallpaperCategoryEntityFromJson(data as WallpaperCategoryEntity, json) as T;
			case WallpaperCategoryRes:
				return wallpaperCategoryResFromJson(data as WallpaperCategoryRes, json) as T;
			case WallpaperCategoryResCategory:
				return wallpaperCategoryResCategoryFromJson(data as WallpaperCategoryResCategory, json) as T;
			case MTMovieDetailEntity:
				return mTMovieDetailEntityFromJson(data as MTMovieDetailEntity, json) as T;
			case MTMovieDetailDirector:
				return mTMovieDetailDirectorFromJson(data as MTMovieDetailDirector, json) as T;
			case MTMovieDetailActorList:
				return mTMovieDetailActorListFromJson(data as MTMovieDetailActorList, json) as T;
			case MTMovieDetailStyle:
				return mTMovieDetailStyleFromJson(data as MTMovieDetailStyle, json) as T;
			case MTMovieDetailRelease:
				return mTMovieDetailReleaseFromJson(data as MTMovieDetailRelease, json) as T;
			case MTMovieDetailVideo:
				return mTMovieDetailVideoFromJson(data as MTMovieDetailVideo, json) as T;
			case MoiveDetailsEntity:
				return moiveDetailsEntityFromJson(data as MoiveDetailsEntity, json) as T;
			case MoiveDetailsRating:
				return moiveDetailsRatingFromJson(data as MoiveDetailsRating, json) as T;
			case MoiveDetailsRatingDetails:
				return moiveDetailsRatingDetailsFromJson(data as MoiveDetailsRatingDetails, json) as T;
			case MoiveDetailsVideo:
				return moiveDetailsVideoFromJson(data as MoiveDetailsVideo, json) as T;
			case MoiveDetailsVideosSource:
				return moiveDetailsVideosSourceFromJson(data as MoiveDetailsVideosSource, json) as T;
			case MoiveDetailsImages:
				return moiveDetailsImagesFromJson(data as MoiveDetailsImages, json) as T;
			case MoiveDetailsPopularCommants:
				return moiveDetailsPopularCommantsFromJson(data as MoiveDetailsPopularCommants, json) as T;
			case MoiveDetailsPopularCommentsRating:
				return moiveDetailsPopularCommentsRatingFromJson(data as MoiveDetailsPopularCommentsRating, json) as T;
			case MoiveDetailsPopularCommentsAuthor:
				return moiveDetailsPopularCommentsAuthorFromJson(data as MoiveDetailsPopularCommentsAuthor, json) as T;
			case MoiveDetailsWriter:
				return moiveDetailsWriterFromJson(data as MoiveDetailsWriter, json) as T;
			case MoiveDetailsWritersAvatars:
				return moiveDetailsWritersAvatarsFromJson(data as MoiveDetailsWritersAvatars, json) as T;
			case MoiveDetailsTrailer:
				return moiveDetailsTrailerFromJson(data as MoiveDetailsTrailer, json) as T;
			case MoiveDetailsBlooper:
				return moiveDetailsBlooperFromJson(data as MoiveDetailsBlooper, json) as T;
			case MoiveDetailsCast:
				return moiveDetailsCastFromJson(data as MoiveDetailsCast, json) as T;
			case MoiveDetailsCastsAvatars:
				return moiveDetailsCastsAvatarsFromJson(data as MoiveDetailsCastsAvatars, json) as T;
			case MoiveDetailsPhoto:
				return moiveDetailsPhotoFromJson(data as MoiveDetailsPhoto, json) as T;
			case MoiveDetailsClip:
				return moiveDetailsClipFromJson(data as MoiveDetailsClip, json) as T;
			case MoiveDetailsDirector:
				return moiveDetailsDirectorFromJson(data as MoiveDetailsDirector, json) as T;
			case MoiveDetailsDirectorsAvatars:
				return moiveDetailsDirectorsAvatarsFromJson(data as MoiveDetailsDirectorsAvatars, json) as T;
			case MoiveDetailsPopularReview:
				return moiveDetailsPopularReviewFromJson(data as MoiveDetailsPopularReview, json) as T;
			case MoiveDetailsPopularReviewsRating:
				return moiveDetailsPopularReviewsRatingFromJson(data as MoiveDetailsPopularReviewsRating, json) as T;
			case MoiveDetailsPopularReviewsAuthor:
				return moiveDetailsPopularReviewsAuthorFromJson(data as MoiveDetailsPopularReviewsAuthor, json) as T;
			case FilmMakerWorksEntity:
				return filmMakerWorksEntityFromJson(data as FilmMakerWorksEntity, json) as T;
			case FilmMakerWorksCelebrity:
				return filmMakerWorksCelebrityFromJson(data as FilmMakerWorksCelebrity, json) as T;
			case FilmMakerWorksCelebrityAvatars:
				return filmMakerWorksCelebrityAvatarsFromJson(data as FilmMakerWorksCelebrityAvatars, json) as T;
			case FilmMakerWorksWork:
				return filmMakerWorksWorkFromJson(data as FilmMakerWorksWork, json) as T;
			case FilmMakerWorksWorksSubject:
				return filmMakerWorksWorksSubjectFromJson(data as FilmMakerWorksWorksSubject, json) as T;
			case FilmMakerWorksWorksSubjectRating:
				return filmMakerWorksWorksSubjectRatingFromJson(data as FilmMakerWorksWorksSubjectRating, json) as T;
			case FilmMakerWorksWorksSubjectRatingDetails:
				return filmMakerWorksWorksSubjectRatingDetailsFromJson(data as FilmMakerWorksWorksSubjectRatingDetails, json) as T;
			case FilmMakerWorksWorksSubjectCast:
				return filmMakerWorksWorksSubjectCastFromJson(data as FilmMakerWorksWorksSubjectCast, json) as T;
			case FilmMakerWorksWorksSubjectCastsAvatars:
				return filmMakerWorksWorksSubjectCastsAvatarsFromJson(data as FilmMakerWorksWorksSubjectCastsAvatars, json) as T;
			case FilmMakerWorksWorksSubjectDirector:
				return filmMakerWorksWorksSubjectDirectorFromJson(data as FilmMakerWorksWorksSubjectDirector, json) as T;
			case FilmMakerWorksWorksSubjectDirectorsAvatars:
				return filmMakerWorksWorksSubjectDirectorsAvatarsFromJson(data as FilmMakerWorksWorksSubjectDirectorsAvatars, json) as T;
			case FilmMakerWorksWorksSubjectImages:
				return filmMakerWorksWorksSubjectImagesFromJson(data as FilmMakerWorksWorksSubjectImages, json) as T;
			case FilmMakerWorkEntity:
				return filmMakerWorkEntityFromJson(data as FilmMakerWorkEntity, json) as T;
			case FilmMakerWorkCelebrity:
				return filmMakerWorkCelebrityFromJson(data as FilmMakerWorkCelebrity, json) as T;
			case FilmMakerWorkCelebrityAvatars:
				return filmMakerWorkCelebrityAvatarsFromJson(data as FilmMakerWorkCelebrityAvatars, json) as T;
			case FilmMakerWorkWork:
				return filmMakerWorkWorkFromJson(data as FilmMakerWorkWork, json) as T;
			case FilmMakerWorkWorksSubject:
				return filmMakerWorkWorksSubjectFromJson(data as FilmMakerWorkWorksSubject, json) as T;
			case FilmMakerWorkWorksSubjectRating:
				return filmMakerWorkWorksSubjectRatingFromJson(data as FilmMakerWorkWorksSubjectRating, json) as T;
			case FilmMakerWorkWorksSubjectRatingDetails:
				return filmMakerWorkWorksSubjectRatingDetailsFromJson(data as FilmMakerWorkWorksSubjectRatingDetails, json) as T;
			case FilmMakerWorkWorksSubjectCast:
				return filmMakerWorkWorksSubjectCastFromJson(data as FilmMakerWorkWorksSubjectCast, json) as T;
			case FilmMakerWorkWorksSubjectCastsAvatars:
				return filmMakerWorkWorksSubjectCastsAvatarsFromJson(data as FilmMakerWorkWorksSubjectCastsAvatars, json) as T;
			case FilmMakerWorkWorksSubjectDirector:
				return filmMakerWorkWorksSubjectDirectorFromJson(data as FilmMakerWorkWorksSubjectDirector, json) as T;
			case FilmMakerWorkWorksSubjectDirectorsAvatars:
				return filmMakerWorkWorksSubjectDirectorsAvatarsFromJson(data as FilmMakerWorkWorksSubjectDirectorsAvatars, json) as T;
			case FilmMakerWorkWorksSubjectImages:
				return filmMakerWorkWorksSubjectImagesFromJson(data as FilmMakerWorkWorksSubjectImages, json) as T;
			case HotWordTypeEntity:
				return hotWordTypeEntityFromJson(data as HotWordTypeEntity, json) as T;
			case HotWordTypeResult:
				return hotWordTypeResultFromJson(data as HotWordTypeResult, json) as T;
			case HotWordTypeResultShowapiResBody:
				return hotWordTypeResultShowapiResBodyFromJson(data as HotWordTypeResultShowapiResBody, json) as T;
			case HotWordTypeResultShowapiResBodyList:
				return hotWordTypeResultShowapiResBodyListFromJson(data as HotWordTypeResultShowapiResBodyList, json) as T;
			case HotWordTypeResultShowapiResBodyListChildList:
				return hotWordTypeResultShowapiResBodyListChildListFromJson(data as HotWordTypeResultShowapiResBodyListChildList, json) as T;
			case FilmMakerEntity:
				return filmMakerEntityFromJson(data as FilmMakerEntity, json) as T;
			case FilmMakerWork:
				return filmMakerWorkFromJson(data as FilmMakerWork, json) as T;
			case FilmMakerWorksSubject:
				return filmMakerWorksSubjectFromJson(data as FilmMakerWorksSubject, json) as T;
			case FilmMakerWorksSubjectRating:
				return filmMakerWorksSubjectRatingFromJson(data as FilmMakerWorksSubjectRating, json) as T;
			case FilmMakerWorksSubjectRatingDetails:
				return filmMakerWorksSubjectRatingDetailsFromJson(data as FilmMakerWorksSubjectRatingDetails, json) as T;
			case FilmMakerWorksSubjectCast:
				return filmMakerWorksSubjectCastFromJson(data as FilmMakerWorksSubjectCast, json) as T;
			case FilmMakerWorksSubjectCastsAvatars:
				return filmMakerWorksSubjectCastsAvatarsFromJson(data as FilmMakerWorksSubjectCastsAvatars, json) as T;
			case FilmMakerWorksSubjectDirector:
				return filmMakerWorksSubjectDirectorFromJson(data as FilmMakerWorksSubjectDirector, json) as T;
			case FilmMakerWorksSubjectDirectorsAvatars:
				return filmMakerWorksSubjectDirectorsAvatarsFromJson(data as FilmMakerWorksSubjectDirectorsAvatars, json) as T;
			case FilmMakerWorksSubjectImages:
				return filmMakerWorksSubjectImagesFromJson(data as FilmMakerWorksSubjectImages, json) as T;
			case FilmMakerAvatars:
				return filmMakerAvatarsFromJson(data as FilmMakerAvatars, json) as T;
			case FilmMakerPhoto:
				return filmMakerPhotoFromJson(data as FilmMakerPhoto, json) as T;
			case ArticleEntity:
				return articleEntityFromJson(data as ArticleEntity, json) as T;
			case ArticleData:
				return articleDataFromJson(data as ArticleData, json) as T;
			case ArticleDataDate:
				return articleDataDateFromJson(data as ArticleDataDate, json) as T;
			case NewsEntity:
				return newsEntityFromJson(data as NewsEntity, json) as T;
			case NewsResult:
				return newsResultFromJson(data as NewsResult, json) as T;
			case NewsResultResult:
				return newsResultResultFromJson(data as NewsResultResult, json) as T;
			case NewsResultResultList:
				return newsResultResultListFromJson(data as NewsResultResultList, json) as T;
			case RealTimeHotspotEntity:
				return realTimeHotspotEntityFromJson(data as RealTimeHotspotEntity, json) as T;
			case RealTimeHotspotResult:
				return realTimeHotspotResultFromJson(data as RealTimeHotspotResult, json) as T;
			case RealTimeHotspotResultShowapiResBody:
				return realTimeHotspotResultShowapiResBodyFromJson(data as RealTimeHotspotResultShowapiResBody, json) as T;
			case RealTimeHotspotResultShowapiResBodyList:
				return realTimeHotspotResultShowapiResBodyListFromJson(data as RealTimeHotspotResultShowapiResBodyList, json) as T;
			case GifPictureJokesEntity:
				return gifPictureJokesEntityFromJson(data as GifPictureJokesEntity, json) as T;
			case GifPictureJokesResult:
				return gifPictureJokesResultFromJson(data as GifPictureJokesResult, json) as T;
			case GifPictureJokesResultShowapiResBody:
				return gifPictureJokesResultShowapiResBodyFromJson(data as GifPictureJokesResultShowapiResBody, json) as T;
			case GifPictureJokesResultShowapiResBodyContentlist:
				return gifPictureJokesResultShowapiResBodyContentlistFromJson(data as GifPictureJokesResultShowapiResBodyContentlist, json) as T;
			case FilmMakerAlbumEntity:
				return filmMakerAlbumEntityFromJson(data as FilmMakerAlbumEntity, json) as T;
			case FilmMakerAlbumPhoto:
				return filmMakerAlbumPhotoFromJson(data as FilmMakerAlbumPhoto, json) as T;
			case FilmMakerAlbumPhotosAuthor:
				return filmMakerAlbumPhotosAuthorFromJson(data as FilmMakerAlbumPhotosAuthor, json) as T;
			case FilmMakerAlbumCelebrity:
				return filmMakerAlbumCelebrityFromJson(data as FilmMakerAlbumCelebrity, json) as T;
			case FilmMakerAlbumCelebrityAvatars:
				return filmMakerAlbumCelebrityAvatarsFromJson(data as FilmMakerAlbumCelebrityAvatars, json) as T;
			case MtimeHotMovieEntity:
				return mtimeHotMovieEntityFromJson(data as MtimeHotMovieEntity, json) as T;
			case MtimeHotMovieM:
				return mtimeHotMovieMFromJson(data as MtimeHotMovieM, json) as T;
			case MtimeHotMovieMsVersion:
				return mtimeHotMovieMsVersionFromJson(data as MtimeHotMovieMsVersion, json) as T;
			case MtimeHotMoviePromo:
				return mtimeHotMoviePromoFromJson(data as MtimeHotMoviePromo, json) as T;
			case MovieCrewEntity:
				return movieCrewEntityFromJson(data as MovieCrewEntity, json) as T;
			case MovieCrewType:
				return movieCrewTypeFromJson(data as MovieCrewType, json) as T;
			case MovieCrewTypesPerson:
				return movieCrewTypesPersonFromJson(data as MovieCrewTypesPerson, json) as T;
			case MovieEntity:
				return movieEntityFromJson(data as MovieEntity, json) as T;
			case MovieSubject:
				return movieSubjectFromJson(data as MovieSubject, json) as T;
			case MovieSubjectsRating:
				return movieSubjectsRatingFromJson(data as MovieSubjectsRating, json) as T;
			case MovieSubjectsRatingDetails:
				return movieSubjectsRatingDetailsFromJson(data as MovieSubjectsRatingDetails, json) as T;
			case MovieSubjectsCast:
				return movieSubjectsCastFromJson(data as MovieSubjectsCast, json) as T;
			case MovieSubjectsCastsAvatars:
				return movieSubjectsCastsAvatarsFromJson(data as MovieSubjectsCastsAvatars, json) as T;
			case MovieSubjectsDirector:
				return movieSubjectsDirectorFromJson(data as MovieSubjectsDirector, json) as T;
			case MovieSubjectsDirectorsAvatars:
				return movieSubjectsDirectorsAvatarsFromJson(data as MovieSubjectsDirectorsAvatars, json) as T;
			case MovieSubjectsImages:
				return movieSubjectsImagesFromJson(data as MovieSubjectsImages, json) as T;    }
    return data as T;
  }

  static _getToJson<T>(Type type, data) {
		switch (type) {
			case MovieStillsEntity:
				return movieStillsEntityToJson(data as MovieStillsEntity);
			case MovieStillsPhoto:
				return movieStillsPhotoToJson(data as MovieStillsPhoto);
			case MovieStillsPhotosAuthor:
				return movieStillsPhotosAuthorToJson(data as MovieStillsPhotosAuthor);
			case MovieStillsSubject:
				return movieStillsSubjectToJson(data as MovieStillsSubject);
			case MovieStillsSubjectRating:
				return movieStillsSubjectRatingToJson(data as MovieStillsSubjectRating);
			case MovieStillsSubjectRatingDetails:
				return movieStillsSubjectRatingDetailsToJson(data as MovieStillsSubjectRatingDetails);
			case MovieStillsSubjectCast:
				return movieStillsSubjectCastToJson(data as MovieStillsSubjectCast);
			case MovieStillsSubjectCastsAvatars:
				return movieStillsSubjectCastsAvatarsToJson(data as MovieStillsSubjectCastsAvatars);
			case MovieStillsSubjectDirector:
				return movieStillsSubjectDirectorToJson(data as MovieStillsSubjectDirector);
			case MovieStillsSubjectDirectorsAvatars:
				return movieStillsSubjectDirectorsAvatarsToJson(data as MovieStillsSubjectDirectorsAvatars);
			case MovieStillsSubjectImages:
				return movieStillsSubjectImagesToJson(data as MovieStillsSubjectImages);
			case MobiePhoneEntity:
				return mobiePhoneEntityToJson(data as MobiePhoneEntity);
			case MobiePhoneResult:
				return mobiePhoneResultToJson(data as MobiePhoneResult);
			case MobiePhoneResultResult:
				return mobiePhoneResultResultToJson(data as MobiePhoneResultResult);
			case WallpaperEntity:
				return wallpaperEntityToJson(data as WallpaperEntity);
			case WallpaperRes:
				return wallpaperResToJson(data as WallpaperRes);
			case WallpaperResVertical:
				return wallpaperResVerticalToJson(data as WallpaperResVertical);
			case BirdWallpaperEntity:
				return birdWallpaperEntityToJson(data as BirdWallpaperEntity);
			case BirdWallpaperData:
				return birdWallpaperDataToJson(data as BirdWallpaperData);
			case SearchNewsEntity:
				return searchNewsEntityToJson(data as SearchNewsEntity);
			case SearchNewsResult:
				return searchNewsResultToJson(data as SearchNewsResult);
			case SearchNewsResultResult:
				return searchNewsResultResultToJson(data as SearchNewsResultResult);
			case SearchNewsResultResultList:
				return searchNewsResultResultListToJson(data as SearchNewsResultResultList);
			case QuotationEntity:
				return quotationEntityToJson(data as QuotationEntity);
			case QuotationShowapiResBody:
				return quotationShowapiResBodyToJson(data as QuotationShowapiResBody);
			case QuotationShowapiResBodyData:
				return quotationShowapiResBodyDataToJson(data as QuotationShowapiResBodyData);
			case GarbageCAIEntity:
				return garbageCAIEntityToJson(data as GarbageCAIEntity);
			case GarbageCAIResult:
				return garbageCAIResultToJson(data as GarbageCAIResult);
			case GarbageCAIResultResult:
				return garbageCAIResultResultToJson(data as GarbageCAIResultResult);
			case GarbageCAIResultResultGarbageInfo:
				return garbageCAIResultResultGarbageInfoToJson(data as GarbageCAIResultResultGarbageInfo);
			case BirdWallpaperCategoryEntity:
				return birdWallpaperCategoryEntityToJson(data as BirdWallpaperCategoryEntity);
			case BirdWallpaperCategoryData:
				return birdWallpaperCategoryDataToJson(data as BirdWallpaperCategoryData);
			case ShortFilmReviewEntity:
				return shortFilmReviewEntityToJson(data as ShortFilmReviewEntity);
			case ShortFilmReviewCommants:
				return shortFilmReviewCommantsToJson(data as ShortFilmReviewCommants);
			case ShortFilmReviewCommentsRating:
				return shortFilmReviewCommentsRatingToJson(data as ShortFilmReviewCommentsRating);
			case ShortFilmReviewCommentsAuthor:
				return shortFilmReviewCommentsAuthorToJson(data as ShortFilmReviewCommentsAuthor);
			case ShortFilmReviewSubject:
				return shortFilmReviewSubjectToJson(data as ShortFilmReviewSubject);
			case ShortFilmReviewSubjectRating:
				return shortFilmReviewSubjectRatingToJson(data as ShortFilmReviewSubjectRating);
			case ShortFilmReviewSubjectRatingDetails:
				return shortFilmReviewSubjectRatingDetailsToJson(data as ShortFilmReviewSubjectRatingDetails);
			case ShortFilmReviewSubjectCast:
				return shortFilmReviewSubjectCastToJson(data as ShortFilmReviewSubjectCast);
			case ShortFilmReviewSubjectCastsAvatars:
				return shortFilmReviewSubjectCastsAvatarsToJson(data as ShortFilmReviewSubjectCastsAvatars);
			case ShortFilmReviewSubjectDirector:
				return shortFilmReviewSubjectDirectorToJson(data as ShortFilmReviewSubjectDirector);
			case ShortFilmReviewSubjectDirectorsAvatars:
				return shortFilmReviewSubjectDirectorsAvatarsToJson(data as ShortFilmReviewSubjectDirectorsAvatars);
			case ShortFilmReviewSubjectImages:
				return shortFilmReviewSubjectImagesToJson(data as ShortFilmReviewSubjectImages);
			case PictureJokeEntity:
				return pictureJokeEntityToJson(data as PictureJokeEntity);
			case PictureJokeResult:
				return pictureJokeResultToJson(data as PictureJokeResult);
			case PictureJokeResultShowapiResBody:
				return pictureJokeResultShowapiResBodyToJson(data as PictureJokeResultShowapiResBody);
			case PictureJokeResultShowapiResBodyContentlist:
				return pictureJokeResultShowapiResBodyContentlistToJson(data as PictureJokeResultShowapiResBodyContentlist);
			case WrittenJokesEntity:
				return writtenJokesEntityToJson(data as WrittenJokesEntity);
			case WrittenJokesResult:
				return writtenJokesResultToJson(data as WrittenJokesResult);
			case WrittenJokesResultShowapiResBody:
				return writtenJokesResultShowapiResBodyToJson(data as WrittenJokesResultShowapiResBody);
			case WrittenJokesResultShowapiResBodyContentlist:
				return writtenJokesResultShowapiResBodyContentlistToJson(data as WrittenJokesResultShowapiResBodyContentlist);
			case WallpaperCategoryEntity:
				return wallpaperCategoryEntityToJson(data as WallpaperCategoryEntity);
			case WallpaperCategoryRes:
				return wallpaperCategoryResToJson(data as WallpaperCategoryRes);
			case WallpaperCategoryResCategory:
				return wallpaperCategoryResCategoryToJson(data as WallpaperCategoryResCategory);
			case MTMovieDetailEntity:
				return mTMovieDetailEntityToJson(data as MTMovieDetailEntity);
			case MTMovieDetailDirector:
				return mTMovieDetailDirectorToJson(data as MTMovieDetailDirector);
			case MTMovieDetailActorList:
				return mTMovieDetailActorListToJson(data as MTMovieDetailActorList);
			case MTMovieDetailStyle:
				return mTMovieDetailStyleToJson(data as MTMovieDetailStyle);
			case MTMovieDetailRelease:
				return mTMovieDetailReleaseToJson(data as MTMovieDetailRelease);
			case MTMovieDetailVideo:
				return mTMovieDetailVideoToJson(data as MTMovieDetailVideo);
			case MoiveDetailsEntity:
				return moiveDetailsEntityToJson(data as MoiveDetailsEntity);
			case MoiveDetailsRating:
				return moiveDetailsRatingToJson(data as MoiveDetailsRating);
			case MoiveDetailsRatingDetails:
				return moiveDetailsRatingDetailsToJson(data as MoiveDetailsRatingDetails);
			case MoiveDetailsVideo:
				return moiveDetailsVideoToJson(data as MoiveDetailsVideo);
			case MoiveDetailsVideosSource:
				return moiveDetailsVideosSourceToJson(data as MoiveDetailsVideosSource);
			case MoiveDetailsImages:
				return moiveDetailsImagesToJson(data as MoiveDetailsImages);
			case MoiveDetailsPopularCommants:
				return moiveDetailsPopularCommantsToJson(data as MoiveDetailsPopularCommants);
			case MoiveDetailsPopularCommentsRating:
				return moiveDetailsPopularCommentsRatingToJson(data as MoiveDetailsPopularCommentsRating);
			case MoiveDetailsPopularCommentsAuthor:
				return moiveDetailsPopularCommentsAuthorToJson(data as MoiveDetailsPopularCommentsAuthor);
			case MoiveDetailsWriter:
				return moiveDetailsWriterToJson(data as MoiveDetailsWriter);
			case MoiveDetailsWritersAvatars:
				return moiveDetailsWritersAvatarsToJson(data as MoiveDetailsWritersAvatars);
			case MoiveDetailsTrailer:
				return moiveDetailsTrailerToJson(data as MoiveDetailsTrailer);
			case MoiveDetailsBlooper:
				return moiveDetailsBlooperToJson(data as MoiveDetailsBlooper);
			case MoiveDetailsCast:
				return moiveDetailsCastToJson(data as MoiveDetailsCast);
			case MoiveDetailsCastsAvatars:
				return moiveDetailsCastsAvatarsToJson(data as MoiveDetailsCastsAvatars);
			case MoiveDetailsPhoto:
				return moiveDetailsPhotoToJson(data as MoiveDetailsPhoto);
			case MoiveDetailsClip:
				return moiveDetailsClipToJson(data as MoiveDetailsClip);
			case MoiveDetailsDirector:
				return moiveDetailsDirectorToJson(data as MoiveDetailsDirector);
			case MoiveDetailsDirectorsAvatars:
				return moiveDetailsDirectorsAvatarsToJson(data as MoiveDetailsDirectorsAvatars);
			case MoiveDetailsPopularReview:
				return moiveDetailsPopularReviewToJson(data as MoiveDetailsPopularReview);
			case MoiveDetailsPopularReviewsRating:
				return moiveDetailsPopularReviewsRatingToJson(data as MoiveDetailsPopularReviewsRating);
			case MoiveDetailsPopularReviewsAuthor:
				return moiveDetailsPopularReviewsAuthorToJson(data as MoiveDetailsPopularReviewsAuthor);
			case FilmMakerWorksEntity:
				return filmMakerWorksEntityToJson(data as FilmMakerWorksEntity);
			case FilmMakerWorksCelebrity:
				return filmMakerWorksCelebrityToJson(data as FilmMakerWorksCelebrity);
			case FilmMakerWorksCelebrityAvatars:
				return filmMakerWorksCelebrityAvatarsToJson(data as FilmMakerWorksCelebrityAvatars);
			case FilmMakerWorksWork:
				return filmMakerWorksWorkToJson(data as FilmMakerWorksWork);
			case FilmMakerWorksWorksSubject:
				return filmMakerWorksWorksSubjectToJson(data as FilmMakerWorksWorksSubject);
			case FilmMakerWorksWorksSubjectRating:
				return filmMakerWorksWorksSubjectRatingToJson(data as FilmMakerWorksWorksSubjectRating);
			case FilmMakerWorksWorksSubjectRatingDetails:
				return filmMakerWorksWorksSubjectRatingDetailsToJson(data as FilmMakerWorksWorksSubjectRatingDetails);
			case FilmMakerWorksWorksSubjectCast:
				return filmMakerWorksWorksSubjectCastToJson(data as FilmMakerWorksWorksSubjectCast);
			case FilmMakerWorksWorksSubjectCastsAvatars:
				return filmMakerWorksWorksSubjectCastsAvatarsToJson(data as FilmMakerWorksWorksSubjectCastsAvatars);
			case FilmMakerWorksWorksSubjectDirector:
				return filmMakerWorksWorksSubjectDirectorToJson(data as FilmMakerWorksWorksSubjectDirector);
			case FilmMakerWorksWorksSubjectDirectorsAvatars:
				return filmMakerWorksWorksSubjectDirectorsAvatarsToJson(data as FilmMakerWorksWorksSubjectDirectorsAvatars);
			case FilmMakerWorksWorksSubjectImages:
				return filmMakerWorksWorksSubjectImagesToJson(data as FilmMakerWorksWorksSubjectImages);
			case FilmMakerWorkEntity:
				return filmMakerWorkEntityToJson(data as FilmMakerWorkEntity);
			case FilmMakerWorkCelebrity:
				return filmMakerWorkCelebrityToJson(data as FilmMakerWorkCelebrity);
			case FilmMakerWorkCelebrityAvatars:
				return filmMakerWorkCelebrityAvatarsToJson(data as FilmMakerWorkCelebrityAvatars);
			case FilmMakerWorkWork:
				return filmMakerWorkWorkToJson(data as FilmMakerWorkWork);
			case FilmMakerWorkWorksSubject:
				return filmMakerWorkWorksSubjectToJson(data as FilmMakerWorkWorksSubject);
			case FilmMakerWorkWorksSubjectRating:
				return filmMakerWorkWorksSubjectRatingToJson(data as FilmMakerWorkWorksSubjectRating);
			case FilmMakerWorkWorksSubjectRatingDetails:
				return filmMakerWorkWorksSubjectRatingDetailsToJson(data as FilmMakerWorkWorksSubjectRatingDetails);
			case FilmMakerWorkWorksSubjectCast:
				return filmMakerWorkWorksSubjectCastToJson(data as FilmMakerWorkWorksSubjectCast);
			case FilmMakerWorkWorksSubjectCastsAvatars:
				return filmMakerWorkWorksSubjectCastsAvatarsToJson(data as FilmMakerWorkWorksSubjectCastsAvatars);
			case FilmMakerWorkWorksSubjectDirector:
				return filmMakerWorkWorksSubjectDirectorToJson(data as FilmMakerWorkWorksSubjectDirector);
			case FilmMakerWorkWorksSubjectDirectorsAvatars:
				return filmMakerWorkWorksSubjectDirectorsAvatarsToJson(data as FilmMakerWorkWorksSubjectDirectorsAvatars);
			case FilmMakerWorkWorksSubjectImages:
				return filmMakerWorkWorksSubjectImagesToJson(data as FilmMakerWorkWorksSubjectImages);
			case HotWordTypeEntity:
				return hotWordTypeEntityToJson(data as HotWordTypeEntity);
			case HotWordTypeResult:
				return hotWordTypeResultToJson(data as HotWordTypeResult);
			case HotWordTypeResultShowapiResBody:
				return hotWordTypeResultShowapiResBodyToJson(data as HotWordTypeResultShowapiResBody);
			case HotWordTypeResultShowapiResBodyList:
				return hotWordTypeResultShowapiResBodyListToJson(data as HotWordTypeResultShowapiResBodyList);
			case HotWordTypeResultShowapiResBodyListChildList:
				return hotWordTypeResultShowapiResBodyListChildListToJson(data as HotWordTypeResultShowapiResBodyListChildList);
			case FilmMakerEntity:
				return filmMakerEntityToJson(data as FilmMakerEntity);
			case FilmMakerWork:
				return filmMakerWorkToJson(data as FilmMakerWork);
			case FilmMakerWorksSubject:
				return filmMakerWorksSubjectToJson(data as FilmMakerWorksSubject);
			case FilmMakerWorksSubjectRating:
				return filmMakerWorksSubjectRatingToJson(data as FilmMakerWorksSubjectRating);
			case FilmMakerWorksSubjectRatingDetails:
				return filmMakerWorksSubjectRatingDetailsToJson(data as FilmMakerWorksSubjectRatingDetails);
			case FilmMakerWorksSubjectCast:
				return filmMakerWorksSubjectCastToJson(data as FilmMakerWorksSubjectCast);
			case FilmMakerWorksSubjectCastsAvatars:
				return filmMakerWorksSubjectCastsAvatarsToJson(data as FilmMakerWorksSubjectCastsAvatars);
			case FilmMakerWorksSubjectDirector:
				return filmMakerWorksSubjectDirectorToJson(data as FilmMakerWorksSubjectDirector);
			case FilmMakerWorksSubjectDirectorsAvatars:
				return filmMakerWorksSubjectDirectorsAvatarsToJson(data as FilmMakerWorksSubjectDirectorsAvatars);
			case FilmMakerWorksSubjectImages:
				return filmMakerWorksSubjectImagesToJson(data as FilmMakerWorksSubjectImages);
			case FilmMakerAvatars:
				return filmMakerAvatarsToJson(data as FilmMakerAvatars);
			case FilmMakerPhoto:
				return filmMakerPhotoToJson(data as FilmMakerPhoto);
			case ArticleEntity:
				return articleEntityToJson(data as ArticleEntity);
			case ArticleData:
				return articleDataToJson(data as ArticleData);
			case ArticleDataDate:
				return articleDataDateToJson(data as ArticleDataDate);
			case NewsEntity:
				return newsEntityToJson(data as NewsEntity);
			case NewsResult:
				return newsResultToJson(data as NewsResult);
			case NewsResultResult:
				return newsResultResultToJson(data as NewsResultResult);
			case NewsResultResultList:
				return newsResultResultListToJson(data as NewsResultResultList);
			case RealTimeHotspotEntity:
				return realTimeHotspotEntityToJson(data as RealTimeHotspotEntity);
			case RealTimeHotspotResult:
				return realTimeHotspotResultToJson(data as RealTimeHotspotResult);
			case RealTimeHotspotResultShowapiResBody:
				return realTimeHotspotResultShowapiResBodyToJson(data as RealTimeHotspotResultShowapiResBody);
			case RealTimeHotspotResultShowapiResBodyList:
				return realTimeHotspotResultShowapiResBodyListToJson(data as RealTimeHotspotResultShowapiResBodyList);
			case GifPictureJokesEntity:
				return gifPictureJokesEntityToJson(data as GifPictureJokesEntity);
			case GifPictureJokesResult:
				return gifPictureJokesResultToJson(data as GifPictureJokesResult);
			case GifPictureJokesResultShowapiResBody:
				return gifPictureJokesResultShowapiResBodyToJson(data as GifPictureJokesResultShowapiResBody);
			case GifPictureJokesResultShowapiResBodyContentlist:
				return gifPictureJokesResultShowapiResBodyContentlistToJson(data as GifPictureJokesResultShowapiResBodyContentlist);
			case FilmMakerAlbumEntity:
				return filmMakerAlbumEntityToJson(data as FilmMakerAlbumEntity);
			case FilmMakerAlbumPhoto:
				return filmMakerAlbumPhotoToJson(data as FilmMakerAlbumPhoto);
			case FilmMakerAlbumPhotosAuthor:
				return filmMakerAlbumPhotosAuthorToJson(data as FilmMakerAlbumPhotosAuthor);
			case FilmMakerAlbumCelebrity:
				return filmMakerAlbumCelebrityToJson(data as FilmMakerAlbumCelebrity);
			case FilmMakerAlbumCelebrityAvatars:
				return filmMakerAlbumCelebrityAvatarsToJson(data as FilmMakerAlbumCelebrityAvatars);
			case MtimeHotMovieEntity:
				return mtimeHotMovieEntityToJson(data as MtimeHotMovieEntity);
			case MtimeHotMovieM:
				return mtimeHotMovieMToJson(data as MtimeHotMovieM);
			case MtimeHotMovieMsVersion:
				return mtimeHotMovieMsVersionToJson(data as MtimeHotMovieMsVersion);
			case MtimeHotMoviePromo:
				return mtimeHotMoviePromoToJson(data as MtimeHotMoviePromo);
			case MovieCrewEntity:
				return movieCrewEntityToJson(data as MovieCrewEntity);
			case MovieCrewType:
				return movieCrewTypeToJson(data as MovieCrewType);
			case MovieCrewTypesPerson:
				return movieCrewTypesPersonToJson(data as MovieCrewTypesPerson);
			case MovieEntity:
				return movieEntityToJson(data as MovieEntity);
			case MovieSubject:
				return movieSubjectToJson(data as MovieSubject);
			case MovieSubjectsRating:
				return movieSubjectsRatingToJson(data as MovieSubjectsRating);
			case MovieSubjectsRatingDetails:
				return movieSubjectsRatingDetailsToJson(data as MovieSubjectsRatingDetails);
			case MovieSubjectsCast:
				return movieSubjectsCastToJson(data as MovieSubjectsCast);
			case MovieSubjectsCastsAvatars:
				return movieSubjectsCastsAvatarsToJson(data as MovieSubjectsCastsAvatars);
			case MovieSubjectsDirector:
				return movieSubjectsDirectorToJson(data as MovieSubjectsDirector);
			case MovieSubjectsDirectorsAvatars:
				return movieSubjectsDirectorsAvatarsToJson(data as MovieSubjectsDirectorsAvatars);
			case MovieSubjectsImages:
				return movieSubjectsImagesToJson(data as MovieSubjectsImages);
			}
			return data as T;
		}
  //Go back to a single instance by type
	static _fromJsonSingle<M>( json) {
		String type = M.toString();
		if(type == (MovieStillsEntity).toString()){
			return MovieStillsEntity().fromJson(json);
		}	else if(type == (MovieStillsPhoto).toString()){
			return MovieStillsPhoto().fromJson(json);
		}	else if(type == (MovieStillsPhotosAuthor).toString()){
			return MovieStillsPhotosAuthor().fromJson(json);
		}	else if(type == (MovieStillsSubject).toString()){
			return MovieStillsSubject().fromJson(json);
		}	else if(type == (MovieStillsSubjectRating).toString()){
			return MovieStillsSubjectRating().fromJson(json);
		}	else if(type == (MovieStillsSubjectRatingDetails).toString()){
			return MovieStillsSubjectRatingDetails().fromJson(json);
		}	else if(type == (MovieStillsSubjectCast).toString()){
			return MovieStillsSubjectCast().fromJson(json);
		}	else if(type == (MovieStillsSubjectCastsAvatars).toString()){
			return MovieStillsSubjectCastsAvatars().fromJson(json);
		}	else if(type == (MovieStillsSubjectDirector).toString()){
			return MovieStillsSubjectDirector().fromJson(json);
		}	else if(type == (MovieStillsSubjectDirectorsAvatars).toString()){
			return MovieStillsSubjectDirectorsAvatars().fromJson(json);
		}	else if(type == (MovieStillsSubjectImages).toString()){
			return MovieStillsSubjectImages().fromJson(json);
		}	else if(type == (MobiePhoneEntity).toString()){
			return MobiePhoneEntity().fromJson(json);
		}	else if(type == (MobiePhoneResult).toString()){
			return MobiePhoneResult().fromJson(json);
		}	else if(type == (MobiePhoneResultResult).toString()){
			return MobiePhoneResultResult().fromJson(json);
		}	else if(type == (WallpaperEntity).toString()){
			return WallpaperEntity().fromJson(json);
		}	else if(type == (WallpaperRes).toString()){
			return WallpaperRes().fromJson(json);
		}	else if(type == (WallpaperResVertical).toString()){
			return WallpaperResVertical().fromJson(json);
		}	else if(type == (BirdWallpaperEntity).toString()){
			return BirdWallpaperEntity().fromJson(json);
		}	else if(type == (BirdWallpaperData).toString()){
			return BirdWallpaperData().fromJson(json);
		}	else if(type == (SearchNewsEntity).toString()){
			return SearchNewsEntity().fromJson(json);
		}	else if(type == (SearchNewsResult).toString()){
			return SearchNewsResult().fromJson(json);
		}	else if(type == (SearchNewsResultResult).toString()){
			return SearchNewsResultResult().fromJson(json);
		}	else if(type == (SearchNewsResultResultList).toString()){
			return SearchNewsResultResultList().fromJson(json);
		}	else if(type == (QuotationEntity).toString()){
			return QuotationEntity().fromJson(json);
		}	else if(type == (QuotationShowapiResBody).toString()){
			return QuotationShowapiResBody().fromJson(json);
		}	else if(type == (QuotationShowapiResBodyData).toString()){
			return QuotationShowapiResBodyData().fromJson(json);
		}	else if(type == (GarbageCAIEntity).toString()){
			return GarbageCAIEntity().fromJson(json);
		}	else if(type == (GarbageCAIResult).toString()){
			return GarbageCAIResult().fromJson(json);
		}	else if(type == (GarbageCAIResultResult).toString()){
			return GarbageCAIResultResult().fromJson(json);
		}	else if(type == (GarbageCAIResultResultGarbageInfo).toString()){
			return GarbageCAIResultResultGarbageInfo().fromJson(json);
		}	else if(type == (BirdWallpaperCategoryEntity).toString()){
			return BirdWallpaperCategoryEntity().fromJson(json);
		}	else if(type == (BirdWallpaperCategoryData).toString()){
			return BirdWallpaperCategoryData().fromJson(json);
		}	else if(type == (ShortFilmReviewEntity).toString()){
			return ShortFilmReviewEntity().fromJson(json);
		}	else if(type == (ShortFilmReviewCommants).toString()){
			return ShortFilmReviewCommants().fromJson(json);
		}	else if(type == (ShortFilmReviewCommentsRating).toString()){
			return ShortFilmReviewCommentsRating().fromJson(json);
		}	else if(type == (ShortFilmReviewCommentsAuthor).toString()){
			return ShortFilmReviewCommentsAuthor().fromJson(json);
		}	else if(type == (ShortFilmReviewSubject).toString()){
			return ShortFilmReviewSubject().fromJson(json);
		}	else if(type == (ShortFilmReviewSubjectRating).toString()){
			return ShortFilmReviewSubjectRating().fromJson(json);
		}	else if(type == (ShortFilmReviewSubjectRatingDetails).toString()){
			return ShortFilmReviewSubjectRatingDetails().fromJson(json);
		}	else if(type == (ShortFilmReviewSubjectCast).toString()){
			return ShortFilmReviewSubjectCast().fromJson(json);
		}	else if(type == (ShortFilmReviewSubjectCastsAvatars).toString()){
			return ShortFilmReviewSubjectCastsAvatars().fromJson(json);
		}	else if(type == (ShortFilmReviewSubjectDirector).toString()){
			return ShortFilmReviewSubjectDirector().fromJson(json);
		}	else if(type == (ShortFilmReviewSubjectDirectorsAvatars).toString()){
			return ShortFilmReviewSubjectDirectorsAvatars().fromJson(json);
		}	else if(type == (ShortFilmReviewSubjectImages).toString()){
			return ShortFilmReviewSubjectImages().fromJson(json);
		}	else if(type == (PictureJokeEntity).toString()){
			return PictureJokeEntity().fromJson(json);
		}	else if(type == (PictureJokeResult).toString()){
			return PictureJokeResult().fromJson(json);
		}	else if(type == (PictureJokeResultShowapiResBody).toString()){
			return PictureJokeResultShowapiResBody().fromJson(json);
		}	else if(type == (PictureJokeResultShowapiResBodyContentlist).toString()){
			return PictureJokeResultShowapiResBodyContentlist().fromJson(json);
		}	else if(type == (WrittenJokesEntity).toString()){
			return WrittenJokesEntity().fromJson(json);
		}	else if(type == (WrittenJokesResult).toString()){
			return WrittenJokesResult().fromJson(json);
		}	else if(type == (WrittenJokesResultShowapiResBody).toString()){
			return WrittenJokesResultShowapiResBody().fromJson(json);
		}	else if(type == (WrittenJokesResultShowapiResBodyContentlist).toString()){
			return WrittenJokesResultShowapiResBodyContentlist().fromJson(json);
		}	else if(type == (WallpaperCategoryEntity).toString()){
			return WallpaperCategoryEntity().fromJson(json);
		}	else if(type == (WallpaperCategoryRes).toString()){
			return WallpaperCategoryRes().fromJson(json);
		}	else if(type == (WallpaperCategoryResCategory).toString()){
			return WallpaperCategoryResCategory().fromJson(json);
		}	else if(type == (MTMovieDetailEntity).toString()){
			return MTMovieDetailEntity().fromJson(json);
		}	else if(type == (MTMovieDetailDirector).toString()){
			return MTMovieDetailDirector().fromJson(json);
		}	else if(type == (MTMovieDetailActorList).toString()){
			return MTMovieDetailActorList().fromJson(json);
		}	else if(type == (MTMovieDetailStyle).toString()){
			return MTMovieDetailStyle().fromJson(json);
		}	else if(type == (MTMovieDetailRelease).toString()){
			return MTMovieDetailRelease().fromJson(json);
		}	else if(type == (MTMovieDetailVideo).toString()){
			return MTMovieDetailVideo().fromJson(json);
		}	else if(type == (MoiveDetailsEntity).toString()){
			return MoiveDetailsEntity().fromJson(json);
		}	else if(type == (MoiveDetailsRating).toString()){
			return MoiveDetailsRating().fromJson(json);
		}	else if(type == (MoiveDetailsRatingDetails).toString()){
			return MoiveDetailsRatingDetails().fromJson(json);
		}	else if(type == (MoiveDetailsVideo).toString()){
			return MoiveDetailsVideo().fromJson(json);
		}	else if(type == (MoiveDetailsVideosSource).toString()){
			return MoiveDetailsVideosSource().fromJson(json);
		}	else if(type == (MoiveDetailsImages).toString()){
			return MoiveDetailsImages().fromJson(json);
		}	else if(type == (MoiveDetailsPopularCommants).toString()){
			return MoiveDetailsPopularCommants().fromJson(json);
		}	else if(type == (MoiveDetailsPopularCommentsRating).toString()){
			return MoiveDetailsPopularCommentsRating().fromJson(json);
		}	else if(type == (MoiveDetailsPopularCommentsAuthor).toString()){
			return MoiveDetailsPopularCommentsAuthor().fromJson(json);
		}	else if(type == (MoiveDetailsWriter).toString()){
			return MoiveDetailsWriter().fromJson(json);
		}	else if(type == (MoiveDetailsWritersAvatars).toString()){
			return MoiveDetailsWritersAvatars().fromJson(json);
		}	else if(type == (MoiveDetailsTrailer).toString()){
			return MoiveDetailsTrailer().fromJson(json);
		}	else if(type == (MoiveDetailsBlooper).toString()){
			return MoiveDetailsBlooper().fromJson(json);
		}	else if(type == (MoiveDetailsCast).toString()){
			return MoiveDetailsCast().fromJson(json);
		}	else if(type == (MoiveDetailsCastsAvatars).toString()){
			return MoiveDetailsCastsAvatars().fromJson(json);
		}	else if(type == (MoiveDetailsPhoto).toString()){
			return MoiveDetailsPhoto().fromJson(json);
		}	else if(type == (MoiveDetailsClip).toString()){
			return MoiveDetailsClip().fromJson(json);
		}	else if(type == (MoiveDetailsDirector).toString()){
			return MoiveDetailsDirector().fromJson(json);
		}	else if(type == (MoiveDetailsDirectorsAvatars).toString()){
			return MoiveDetailsDirectorsAvatars().fromJson(json);
		}	else if(type == (MoiveDetailsPopularReview).toString()){
			return MoiveDetailsPopularReview().fromJson(json);
		}	else if(type == (MoiveDetailsPopularReviewsRating).toString()){
			return MoiveDetailsPopularReviewsRating().fromJson(json);
		}	else if(type == (MoiveDetailsPopularReviewsAuthor).toString()){
			return MoiveDetailsPopularReviewsAuthor().fromJson(json);
		}	else if(type == (FilmMakerWorksEntity).toString()){
			return FilmMakerWorksEntity().fromJson(json);
		}	else if(type == (FilmMakerWorksCelebrity).toString()){
			return FilmMakerWorksCelebrity().fromJson(json);
		}	else if(type == (FilmMakerWorksCelebrityAvatars).toString()){
			return FilmMakerWorksCelebrityAvatars().fromJson(json);
		}	else if(type == (FilmMakerWorksWork).toString()){
			return FilmMakerWorksWork().fromJson(json);
		}	else if(type == (FilmMakerWorksWorksSubject).toString()){
			return FilmMakerWorksWorksSubject().fromJson(json);
		}	else if(type == (FilmMakerWorksWorksSubjectRating).toString()){
			return FilmMakerWorksWorksSubjectRating().fromJson(json);
		}	else if(type == (FilmMakerWorksWorksSubjectRatingDetails).toString()){
			return FilmMakerWorksWorksSubjectRatingDetails().fromJson(json);
		}	else if(type == (FilmMakerWorksWorksSubjectCast).toString()){
			return FilmMakerWorksWorksSubjectCast().fromJson(json);
		}	else if(type == (FilmMakerWorksWorksSubjectCastsAvatars).toString()){
			return FilmMakerWorksWorksSubjectCastsAvatars().fromJson(json);
		}	else if(type == (FilmMakerWorksWorksSubjectDirector).toString()){
			return FilmMakerWorksWorksSubjectDirector().fromJson(json);
		}	else if(type == (FilmMakerWorksWorksSubjectDirectorsAvatars).toString()){
			return FilmMakerWorksWorksSubjectDirectorsAvatars().fromJson(json);
		}	else if(type == (FilmMakerWorksWorksSubjectImages).toString()){
			return FilmMakerWorksWorksSubjectImages().fromJson(json);
		}	else if(type == (FilmMakerWorkEntity).toString()){
			return FilmMakerWorkEntity().fromJson(json);
		}	else if(type == (FilmMakerWorkCelebrity).toString()){
			return FilmMakerWorkCelebrity().fromJson(json);
		}	else if(type == (FilmMakerWorkCelebrityAvatars).toString()){
			return FilmMakerWorkCelebrityAvatars().fromJson(json);
		}	else if(type == (FilmMakerWorkWork).toString()){
			return FilmMakerWorkWork().fromJson(json);
		}	else if(type == (FilmMakerWorkWorksSubject).toString()){
			return FilmMakerWorkWorksSubject().fromJson(json);
		}	else if(type == (FilmMakerWorkWorksSubjectRating).toString()){
			return FilmMakerWorkWorksSubjectRating().fromJson(json);
		}	else if(type == (FilmMakerWorkWorksSubjectRatingDetails).toString()){
			return FilmMakerWorkWorksSubjectRatingDetails().fromJson(json);
		}	else if(type == (FilmMakerWorkWorksSubjectCast).toString()){
			return FilmMakerWorkWorksSubjectCast().fromJson(json);
		}	else if(type == (FilmMakerWorkWorksSubjectCastsAvatars).toString()){
			return FilmMakerWorkWorksSubjectCastsAvatars().fromJson(json);
		}	else if(type == (FilmMakerWorkWorksSubjectDirector).toString()){
			return FilmMakerWorkWorksSubjectDirector().fromJson(json);
		}	else if(type == (FilmMakerWorkWorksSubjectDirectorsAvatars).toString()){
			return FilmMakerWorkWorksSubjectDirectorsAvatars().fromJson(json);
		}	else if(type == (FilmMakerWorkWorksSubjectImages).toString()){
			return FilmMakerWorkWorksSubjectImages().fromJson(json);
		}	else if(type == (HotWordTypeEntity).toString()){
			return HotWordTypeEntity().fromJson(json);
		}	else if(type == (HotWordTypeResult).toString()){
			return HotWordTypeResult().fromJson(json);
		}	else if(type == (HotWordTypeResultShowapiResBody).toString()){
			return HotWordTypeResultShowapiResBody().fromJson(json);
		}	else if(type == (HotWordTypeResultShowapiResBodyList).toString()){
			return HotWordTypeResultShowapiResBodyList().fromJson(json);
		}	else if(type == (HotWordTypeResultShowapiResBodyListChildList).toString()){
			return HotWordTypeResultShowapiResBodyListChildList().fromJson(json);
		}	else if(type == (FilmMakerEntity).toString()){
			return FilmMakerEntity().fromJson(json);
		}	else if(type == (FilmMakerWork).toString()){
			return FilmMakerWork().fromJson(json);
		}	else if(type == (FilmMakerWorksSubject).toString()){
			return FilmMakerWorksSubject().fromJson(json);
		}	else if(type == (FilmMakerWorksSubjectRating).toString()){
			return FilmMakerWorksSubjectRating().fromJson(json);
		}	else if(type == (FilmMakerWorksSubjectRatingDetails).toString()){
			return FilmMakerWorksSubjectRatingDetails().fromJson(json);
		}	else if(type == (FilmMakerWorksSubjectCast).toString()){
			return FilmMakerWorksSubjectCast().fromJson(json);
		}	else if(type == (FilmMakerWorksSubjectCastsAvatars).toString()){
			return FilmMakerWorksSubjectCastsAvatars().fromJson(json);
		}	else if(type == (FilmMakerWorksSubjectDirector).toString()){
			return FilmMakerWorksSubjectDirector().fromJson(json);
		}	else if(type == (FilmMakerWorksSubjectDirectorsAvatars).toString()){
			return FilmMakerWorksSubjectDirectorsAvatars().fromJson(json);
		}	else if(type == (FilmMakerWorksSubjectImages).toString()){
			return FilmMakerWorksSubjectImages().fromJson(json);
		}	else if(type == (FilmMakerAvatars).toString()){
			return FilmMakerAvatars().fromJson(json);
		}	else if(type == (FilmMakerPhoto).toString()){
			return FilmMakerPhoto().fromJson(json);
		}	else if(type == (ArticleEntity).toString()){
			return ArticleEntity().fromJson(json);
		}	else if(type == (ArticleData).toString()){
			return ArticleData().fromJson(json);
		}	else if(type == (ArticleDataDate).toString()){
			return ArticleDataDate().fromJson(json);
		}	else if(type == (NewsEntity).toString()){
			return NewsEntity().fromJson(json);
		}	else if(type == (NewsResult).toString()){
			return NewsResult().fromJson(json);
		}	else if(type == (NewsResultResult).toString()){
			return NewsResultResult().fromJson(json);
		}	else if(type == (NewsResultResultList).toString()){
			return NewsResultResultList().fromJson(json);
		}	else if(type == (RealTimeHotspotEntity).toString()){
			return RealTimeHotspotEntity().fromJson(json);
		}	else if(type == (RealTimeHotspotResult).toString()){
			return RealTimeHotspotResult().fromJson(json);
		}	else if(type == (RealTimeHotspotResultShowapiResBody).toString()){
			return RealTimeHotspotResultShowapiResBody().fromJson(json);
		}	else if(type == (RealTimeHotspotResultShowapiResBodyList).toString()){
			return RealTimeHotspotResultShowapiResBodyList().fromJson(json);
		}	else if(type == (GifPictureJokesEntity).toString()){
			return GifPictureJokesEntity().fromJson(json);
		}	else if(type == (GifPictureJokesResult).toString()){
			return GifPictureJokesResult().fromJson(json);
		}	else if(type == (GifPictureJokesResultShowapiResBody).toString()){
			return GifPictureJokesResultShowapiResBody().fromJson(json);
		}	else if(type == (GifPictureJokesResultShowapiResBodyContentlist).toString()){
			return GifPictureJokesResultShowapiResBodyContentlist().fromJson(json);
		}	else if(type == (FilmMakerAlbumEntity).toString()){
			return FilmMakerAlbumEntity().fromJson(json);
		}	else if(type == (FilmMakerAlbumPhoto).toString()){
			return FilmMakerAlbumPhoto().fromJson(json);
		}	else if(type == (FilmMakerAlbumPhotosAuthor).toString()){
			return FilmMakerAlbumPhotosAuthor().fromJson(json);
		}	else if(type == (FilmMakerAlbumCelebrity).toString()){
			return FilmMakerAlbumCelebrity().fromJson(json);
		}	else if(type == (FilmMakerAlbumCelebrityAvatars).toString()){
			return FilmMakerAlbumCelebrityAvatars().fromJson(json);
		}	else if(type == (MtimeHotMovieEntity).toString()){
			return MtimeHotMovieEntity().fromJson(json);
		}	else if(type == (MtimeHotMovieM).toString()){
			return MtimeHotMovieM().fromJson(json);
		}	else if(type == (MtimeHotMovieMsVersion).toString()){
			return MtimeHotMovieMsVersion().fromJson(json);
		}	else if(type == (MtimeHotMoviePromo).toString()){
			return MtimeHotMoviePromo().fromJson(json);
		}	else if(type == (MovieCrewEntity).toString()){
			return MovieCrewEntity().fromJson(json);
		}	else if(type == (MovieCrewType).toString()){
			return MovieCrewType().fromJson(json);
		}	else if(type == (MovieCrewTypesPerson).toString()){
			return MovieCrewTypesPerson().fromJson(json);
		}	else if(type == (MovieEntity).toString()){
			return MovieEntity().fromJson(json);
		}	else if(type == (MovieSubject).toString()){
			return MovieSubject().fromJson(json);
		}	else if(type == (MovieSubjectsRating).toString()){
			return MovieSubjectsRating().fromJson(json);
		}	else if(type == (MovieSubjectsRatingDetails).toString()){
			return MovieSubjectsRatingDetails().fromJson(json);
		}	else if(type == (MovieSubjectsCast).toString()){
			return MovieSubjectsCast().fromJson(json);
		}	else if(type == (MovieSubjectsCastsAvatars).toString()){
			return MovieSubjectsCastsAvatars().fromJson(json);
		}	else if(type == (MovieSubjectsDirector).toString()){
			return MovieSubjectsDirector().fromJson(json);
		}	else if(type == (MovieSubjectsDirectorsAvatars).toString()){
			return MovieSubjectsDirectorsAvatars().fromJson(json);
		}	else if(type == (MovieSubjectsImages).toString()){
			return MovieSubjectsImages().fromJson(json);
		}	
		return null;
	}

  //list is returned by type
	static M _getListChildType<M>(List data) {
		if(List<MovieStillsEntity>() is M){
			return data.map<MovieStillsEntity>((e) => MovieStillsEntity().fromJson(e)).toList() as M;
		}	else if(List<MovieStillsPhoto>() is M){
			return data.map<MovieStillsPhoto>((e) => MovieStillsPhoto().fromJson(e)).toList() as M;
		}	else if(List<MovieStillsPhotosAuthor>() is M){
			return data.map<MovieStillsPhotosAuthor>((e) => MovieStillsPhotosAuthor().fromJson(e)).toList() as M;
		}	else if(List<MovieStillsSubject>() is M){
			return data.map<MovieStillsSubject>((e) => MovieStillsSubject().fromJson(e)).toList() as M;
		}	else if(List<MovieStillsSubjectRating>() is M){
			return data.map<MovieStillsSubjectRating>((e) => MovieStillsSubjectRating().fromJson(e)).toList() as M;
		}	else if(List<MovieStillsSubjectRatingDetails>() is M){
			return data.map<MovieStillsSubjectRatingDetails>((e) => MovieStillsSubjectRatingDetails().fromJson(e)).toList() as M;
		}	else if(List<MovieStillsSubjectCast>() is M){
			return data.map<MovieStillsSubjectCast>((e) => MovieStillsSubjectCast().fromJson(e)).toList() as M;
		}	else if(List<MovieStillsSubjectCastsAvatars>() is M){
			return data.map<MovieStillsSubjectCastsAvatars>((e) => MovieStillsSubjectCastsAvatars().fromJson(e)).toList() as M;
		}	else if(List<MovieStillsSubjectDirector>() is M){
			return data.map<MovieStillsSubjectDirector>((e) => MovieStillsSubjectDirector().fromJson(e)).toList() as M;
		}	else if(List<MovieStillsSubjectDirectorsAvatars>() is M){
			return data.map<MovieStillsSubjectDirectorsAvatars>((e) => MovieStillsSubjectDirectorsAvatars().fromJson(e)).toList() as M;
		}	else if(List<MovieStillsSubjectImages>() is M){
			return data.map<MovieStillsSubjectImages>((e) => MovieStillsSubjectImages().fromJson(e)).toList() as M;
		}	else if(List<MobiePhoneEntity>() is M){
			return data.map<MobiePhoneEntity>((e) => MobiePhoneEntity().fromJson(e)).toList() as M;
		}	else if(List<MobiePhoneResult>() is M){
			return data.map<MobiePhoneResult>((e) => MobiePhoneResult().fromJson(e)).toList() as M;
		}	else if(List<MobiePhoneResultResult>() is M){
			return data.map<MobiePhoneResultResult>((e) => MobiePhoneResultResult().fromJson(e)).toList() as M;
		}	else if(List<WallpaperEntity>() is M){
			return data.map<WallpaperEntity>((e) => WallpaperEntity().fromJson(e)).toList() as M;
		}	else if(List<WallpaperRes>() is M){
			return data.map<WallpaperRes>((e) => WallpaperRes().fromJson(e)).toList() as M;
		}	else if(List<WallpaperResVertical>() is M){
			return data.map<WallpaperResVertical>((e) => WallpaperResVertical().fromJson(e)).toList() as M;
		}	else if(List<BirdWallpaperEntity>() is M){
			return data.map<BirdWallpaperEntity>((e) => BirdWallpaperEntity().fromJson(e)).toList() as M;
		}	else if(List<BirdWallpaperData>() is M){
			return data.map<BirdWallpaperData>((e) => BirdWallpaperData().fromJson(e)).toList() as M;
		}	else if(List<SearchNewsEntity>() is M){
			return data.map<SearchNewsEntity>((e) => SearchNewsEntity().fromJson(e)).toList() as M;
		}	else if(List<SearchNewsResult>() is M){
			return data.map<SearchNewsResult>((e) => SearchNewsResult().fromJson(e)).toList() as M;
		}	else if(List<SearchNewsResultResult>() is M){
			return data.map<SearchNewsResultResult>((e) => SearchNewsResultResult().fromJson(e)).toList() as M;
		}	else if(List<SearchNewsResultResultList>() is M){
			return data.map<SearchNewsResultResultList>((e) => SearchNewsResultResultList().fromJson(e)).toList() as M;
		}	else if(List<QuotationEntity>() is M){
			return data.map<QuotationEntity>((e) => QuotationEntity().fromJson(e)).toList() as M;
		}	else if(List<QuotationShowapiResBody>() is M){
			return data.map<QuotationShowapiResBody>((e) => QuotationShowapiResBody().fromJson(e)).toList() as M;
		}	else if(List<QuotationShowapiResBodyData>() is M){
			return data.map<QuotationShowapiResBodyData>((e) => QuotationShowapiResBodyData().fromJson(e)).toList() as M;
		}	else if(List<GarbageCAIEntity>() is M){
			return data.map<GarbageCAIEntity>((e) => GarbageCAIEntity().fromJson(e)).toList() as M;
		}	else if(List<GarbageCAIResult>() is M){
			return data.map<GarbageCAIResult>((e) => GarbageCAIResult().fromJson(e)).toList() as M;
		}	else if(List<GarbageCAIResultResult>() is M){
			return data.map<GarbageCAIResultResult>((e) => GarbageCAIResultResult().fromJson(e)).toList() as M;
		}	else if(List<GarbageCAIResultResultGarbageInfo>() is M){
			return data.map<GarbageCAIResultResultGarbageInfo>((e) => GarbageCAIResultResultGarbageInfo().fromJson(e)).toList() as M;
		}	else if(List<BirdWallpaperCategoryEntity>() is M){
			return data.map<BirdWallpaperCategoryEntity>((e) => BirdWallpaperCategoryEntity().fromJson(e)).toList() as M;
		}	else if(List<BirdWallpaperCategoryData>() is M){
			return data.map<BirdWallpaperCategoryData>((e) => BirdWallpaperCategoryData().fromJson(e)).toList() as M;
		}	else if(List<ShortFilmReviewEntity>() is M){
			return data.map<ShortFilmReviewEntity>((e) => ShortFilmReviewEntity().fromJson(e)).toList() as M;
		}	else if(List<ShortFilmReviewCommants>() is M){
			return data.map<ShortFilmReviewCommants>((e) => ShortFilmReviewCommants().fromJson(e)).toList() as M;
		}	else if(List<ShortFilmReviewCommentsRating>() is M){
			return data.map<ShortFilmReviewCommentsRating>((e) => ShortFilmReviewCommentsRating().fromJson(e)).toList() as M;
		}	else if(List<ShortFilmReviewCommentsAuthor>() is M){
			return data.map<ShortFilmReviewCommentsAuthor>((e) => ShortFilmReviewCommentsAuthor().fromJson(e)).toList() as M;
		}	else if(List<ShortFilmReviewSubject>() is M){
			return data.map<ShortFilmReviewSubject>((e) => ShortFilmReviewSubject().fromJson(e)).toList() as M;
		}	else if(List<ShortFilmReviewSubjectRating>() is M){
			return data.map<ShortFilmReviewSubjectRating>((e) => ShortFilmReviewSubjectRating().fromJson(e)).toList() as M;
		}	else if(List<ShortFilmReviewSubjectRatingDetails>() is M){
			return data.map<ShortFilmReviewSubjectRatingDetails>((e) => ShortFilmReviewSubjectRatingDetails().fromJson(e)).toList() as M;
		}	else if(List<ShortFilmReviewSubjectCast>() is M){
			return data.map<ShortFilmReviewSubjectCast>((e) => ShortFilmReviewSubjectCast().fromJson(e)).toList() as M;
		}	else if(List<ShortFilmReviewSubjectCastsAvatars>() is M){
			return data.map<ShortFilmReviewSubjectCastsAvatars>((e) => ShortFilmReviewSubjectCastsAvatars().fromJson(e)).toList() as M;
		}	else if(List<ShortFilmReviewSubjectDirector>() is M){
			return data.map<ShortFilmReviewSubjectDirector>((e) => ShortFilmReviewSubjectDirector().fromJson(e)).toList() as M;
		}	else if(List<ShortFilmReviewSubjectDirectorsAvatars>() is M){
			return data.map<ShortFilmReviewSubjectDirectorsAvatars>((e) => ShortFilmReviewSubjectDirectorsAvatars().fromJson(e)).toList() as M;
		}	else if(List<ShortFilmReviewSubjectImages>() is M){
			return data.map<ShortFilmReviewSubjectImages>((e) => ShortFilmReviewSubjectImages().fromJson(e)).toList() as M;
		}	else if(List<PictureJokeEntity>() is M){
			return data.map<PictureJokeEntity>((e) => PictureJokeEntity().fromJson(e)).toList() as M;
		}	else if(List<PictureJokeResult>() is M){
			return data.map<PictureJokeResult>((e) => PictureJokeResult().fromJson(e)).toList() as M;
		}	else if(List<PictureJokeResultShowapiResBody>() is M){
			return data.map<PictureJokeResultShowapiResBody>((e) => PictureJokeResultShowapiResBody().fromJson(e)).toList() as M;
		}	else if(List<PictureJokeResultShowapiResBodyContentlist>() is M){
			return data.map<PictureJokeResultShowapiResBodyContentlist>((e) => PictureJokeResultShowapiResBodyContentlist().fromJson(e)).toList() as M;
		}	else if(List<WrittenJokesEntity>() is M){
			return data.map<WrittenJokesEntity>((e) => WrittenJokesEntity().fromJson(e)).toList() as M;
		}	else if(List<WrittenJokesResult>() is M){
			return data.map<WrittenJokesResult>((e) => WrittenJokesResult().fromJson(e)).toList() as M;
		}	else if(List<WrittenJokesResultShowapiResBody>() is M){
			return data.map<WrittenJokesResultShowapiResBody>((e) => WrittenJokesResultShowapiResBody().fromJson(e)).toList() as M;
		}	else if(List<WrittenJokesResultShowapiResBodyContentlist>() is M){
			return data.map<WrittenJokesResultShowapiResBodyContentlist>((e) => WrittenJokesResultShowapiResBodyContentlist().fromJson(e)).toList() as M;
		}	else if(List<WallpaperCategoryEntity>() is M){
			return data.map<WallpaperCategoryEntity>((e) => WallpaperCategoryEntity().fromJson(e)).toList() as M;
		}	else if(List<WallpaperCategoryRes>() is M){
			return data.map<WallpaperCategoryRes>((e) => WallpaperCategoryRes().fromJson(e)).toList() as M;
		}	else if(List<WallpaperCategoryResCategory>() is M){
			return data.map<WallpaperCategoryResCategory>((e) => WallpaperCategoryResCategory().fromJson(e)).toList() as M;
		}	else if(List<MTMovieDetailEntity>() is M){
			return data.map<MTMovieDetailEntity>((e) => MTMovieDetailEntity().fromJson(e)).toList() as M;
		}	else if(List<MTMovieDetailDirector>() is M){
			return data.map<MTMovieDetailDirector>((e) => MTMovieDetailDirector().fromJson(e)).toList() as M;
		}	else if(List<MTMovieDetailActorList>() is M){
			return data.map<MTMovieDetailActorList>((e) => MTMovieDetailActorList().fromJson(e)).toList() as M;
		}	else if(List<MTMovieDetailStyle>() is M){
			return data.map<MTMovieDetailStyle>((e) => MTMovieDetailStyle().fromJson(e)).toList() as M;
		}	else if(List<MTMovieDetailRelease>() is M){
			return data.map<MTMovieDetailRelease>((e) => MTMovieDetailRelease().fromJson(e)).toList() as M;
		}	else if(List<MTMovieDetailVideo>() is M){
			return data.map<MTMovieDetailVideo>((e) => MTMovieDetailVideo().fromJson(e)).toList() as M;
		}	else if(List<MoiveDetailsEntity>() is M){
			return data.map<MoiveDetailsEntity>((e) => MoiveDetailsEntity().fromJson(e)).toList() as M;
		}	else if(List<MoiveDetailsRating>() is M){
			return data.map<MoiveDetailsRating>((e) => MoiveDetailsRating().fromJson(e)).toList() as M;
		}	else if(List<MoiveDetailsRatingDetails>() is M){
			return data.map<MoiveDetailsRatingDetails>((e) => MoiveDetailsRatingDetails().fromJson(e)).toList() as M;
		}	else if(List<MoiveDetailsVideo>() is M){
			return data.map<MoiveDetailsVideo>((e) => MoiveDetailsVideo().fromJson(e)).toList() as M;
		}	else if(List<MoiveDetailsVideosSource>() is M){
			return data.map<MoiveDetailsVideosSource>((e) => MoiveDetailsVideosSource().fromJson(e)).toList() as M;
		}	else if(List<MoiveDetailsImages>() is M){
			return data.map<MoiveDetailsImages>((e) => MoiveDetailsImages().fromJson(e)).toList() as M;
		}	else if(List<MoiveDetailsPopularCommants>() is M){
			return data.map<MoiveDetailsPopularCommants>((e) => MoiveDetailsPopularCommants().fromJson(e)).toList() as M;
		}	else if(List<MoiveDetailsPopularCommentsRating>() is M){
			return data.map<MoiveDetailsPopularCommentsRating>((e) => MoiveDetailsPopularCommentsRating().fromJson(e)).toList() as M;
		}	else if(List<MoiveDetailsPopularCommentsAuthor>() is M){
			return data.map<MoiveDetailsPopularCommentsAuthor>((e) => MoiveDetailsPopularCommentsAuthor().fromJson(e)).toList() as M;
		}	else if(List<MoiveDetailsWriter>() is M){
			return data.map<MoiveDetailsWriter>((e) => MoiveDetailsWriter().fromJson(e)).toList() as M;
		}	else if(List<MoiveDetailsWritersAvatars>() is M){
			return data.map<MoiveDetailsWritersAvatars>((e) => MoiveDetailsWritersAvatars().fromJson(e)).toList() as M;
		}	else if(List<MoiveDetailsTrailer>() is M){
			return data.map<MoiveDetailsTrailer>((e) => MoiveDetailsTrailer().fromJson(e)).toList() as M;
		}	else if(List<MoiveDetailsBlooper>() is M){
			return data.map<MoiveDetailsBlooper>((e) => MoiveDetailsBlooper().fromJson(e)).toList() as M;
		}	else if(List<MoiveDetailsCast>() is M){
			return data.map<MoiveDetailsCast>((e) => MoiveDetailsCast().fromJson(e)).toList() as M;
		}	else if(List<MoiveDetailsCastsAvatars>() is M){
			return data.map<MoiveDetailsCastsAvatars>((e) => MoiveDetailsCastsAvatars().fromJson(e)).toList() as M;
		}	else if(List<MoiveDetailsPhoto>() is M){
			return data.map<MoiveDetailsPhoto>((e) => MoiveDetailsPhoto().fromJson(e)).toList() as M;
		}	else if(List<MoiveDetailsClip>() is M){
			return data.map<MoiveDetailsClip>((e) => MoiveDetailsClip().fromJson(e)).toList() as M;
		}	else if(List<MoiveDetailsDirector>() is M){
			return data.map<MoiveDetailsDirector>((e) => MoiveDetailsDirector().fromJson(e)).toList() as M;
		}	else if(List<MoiveDetailsDirectorsAvatars>() is M){
			return data.map<MoiveDetailsDirectorsAvatars>((e) => MoiveDetailsDirectorsAvatars().fromJson(e)).toList() as M;
		}	else if(List<MoiveDetailsPopularReview>() is M){
			return data.map<MoiveDetailsPopularReview>((e) => MoiveDetailsPopularReview().fromJson(e)).toList() as M;
		}	else if(List<MoiveDetailsPopularReviewsRating>() is M){
			return data.map<MoiveDetailsPopularReviewsRating>((e) => MoiveDetailsPopularReviewsRating().fromJson(e)).toList() as M;
		}	else if(List<MoiveDetailsPopularReviewsAuthor>() is M){
			return data.map<MoiveDetailsPopularReviewsAuthor>((e) => MoiveDetailsPopularReviewsAuthor().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerWorksEntity>() is M){
			return data.map<FilmMakerWorksEntity>((e) => FilmMakerWorksEntity().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerWorksCelebrity>() is M){
			return data.map<FilmMakerWorksCelebrity>((e) => FilmMakerWorksCelebrity().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerWorksCelebrityAvatars>() is M){
			return data.map<FilmMakerWorksCelebrityAvatars>((e) => FilmMakerWorksCelebrityAvatars().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerWorksWork>() is M){
			return data.map<FilmMakerWorksWork>((e) => FilmMakerWorksWork().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerWorksWorksSubject>() is M){
			return data.map<FilmMakerWorksWorksSubject>((e) => FilmMakerWorksWorksSubject().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerWorksWorksSubjectRating>() is M){
			return data.map<FilmMakerWorksWorksSubjectRating>((e) => FilmMakerWorksWorksSubjectRating().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerWorksWorksSubjectRatingDetails>() is M){
			return data.map<FilmMakerWorksWorksSubjectRatingDetails>((e) => FilmMakerWorksWorksSubjectRatingDetails().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerWorksWorksSubjectCast>() is M){
			return data.map<FilmMakerWorksWorksSubjectCast>((e) => FilmMakerWorksWorksSubjectCast().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerWorksWorksSubjectCastsAvatars>() is M){
			return data.map<FilmMakerWorksWorksSubjectCastsAvatars>((e) => FilmMakerWorksWorksSubjectCastsAvatars().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerWorksWorksSubjectDirector>() is M){
			return data.map<FilmMakerWorksWorksSubjectDirector>((e) => FilmMakerWorksWorksSubjectDirector().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerWorksWorksSubjectDirectorsAvatars>() is M){
			return data.map<FilmMakerWorksWorksSubjectDirectorsAvatars>((e) => FilmMakerWorksWorksSubjectDirectorsAvatars().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerWorksWorksSubjectImages>() is M){
			return data.map<FilmMakerWorksWorksSubjectImages>((e) => FilmMakerWorksWorksSubjectImages().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerWorkEntity>() is M){
			return data.map<FilmMakerWorkEntity>((e) => FilmMakerWorkEntity().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerWorkCelebrity>() is M){
			return data.map<FilmMakerWorkCelebrity>((e) => FilmMakerWorkCelebrity().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerWorkCelebrityAvatars>() is M){
			return data.map<FilmMakerWorkCelebrityAvatars>((e) => FilmMakerWorkCelebrityAvatars().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerWorkWork>() is M){
			return data.map<FilmMakerWorkWork>((e) => FilmMakerWorkWork().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerWorkWorksSubject>() is M){
			return data.map<FilmMakerWorkWorksSubject>((e) => FilmMakerWorkWorksSubject().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerWorkWorksSubjectRating>() is M){
			return data.map<FilmMakerWorkWorksSubjectRating>((e) => FilmMakerWorkWorksSubjectRating().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerWorkWorksSubjectRatingDetails>() is M){
			return data.map<FilmMakerWorkWorksSubjectRatingDetails>((e) => FilmMakerWorkWorksSubjectRatingDetails().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerWorkWorksSubjectCast>() is M){
			return data.map<FilmMakerWorkWorksSubjectCast>((e) => FilmMakerWorkWorksSubjectCast().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerWorkWorksSubjectCastsAvatars>() is M){
			return data.map<FilmMakerWorkWorksSubjectCastsAvatars>((e) => FilmMakerWorkWorksSubjectCastsAvatars().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerWorkWorksSubjectDirector>() is M){
			return data.map<FilmMakerWorkWorksSubjectDirector>((e) => FilmMakerWorkWorksSubjectDirector().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerWorkWorksSubjectDirectorsAvatars>() is M){
			return data.map<FilmMakerWorkWorksSubjectDirectorsAvatars>((e) => FilmMakerWorkWorksSubjectDirectorsAvatars().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerWorkWorksSubjectImages>() is M){
			return data.map<FilmMakerWorkWorksSubjectImages>((e) => FilmMakerWorkWorksSubjectImages().fromJson(e)).toList() as M;
		}	else if(List<HotWordTypeEntity>() is M){
			return data.map<HotWordTypeEntity>((e) => HotWordTypeEntity().fromJson(e)).toList() as M;
		}	else if(List<HotWordTypeResult>() is M){
			return data.map<HotWordTypeResult>((e) => HotWordTypeResult().fromJson(e)).toList() as M;
		}	else if(List<HotWordTypeResultShowapiResBody>() is M){
			return data.map<HotWordTypeResultShowapiResBody>((e) => HotWordTypeResultShowapiResBody().fromJson(e)).toList() as M;
		}	else if(List<HotWordTypeResultShowapiResBodyList>() is M){
			return data.map<HotWordTypeResultShowapiResBodyList>((e) => HotWordTypeResultShowapiResBodyList().fromJson(e)).toList() as M;
		}	else if(List<HotWordTypeResultShowapiResBodyListChildList>() is M){
			return data.map<HotWordTypeResultShowapiResBodyListChildList>((e) => HotWordTypeResultShowapiResBodyListChildList().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerEntity>() is M){
			return data.map<FilmMakerEntity>((e) => FilmMakerEntity().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerWork>() is M){
			return data.map<FilmMakerWork>((e) => FilmMakerWork().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerWorksSubject>() is M){
			return data.map<FilmMakerWorksSubject>((e) => FilmMakerWorksSubject().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerWorksSubjectRating>() is M){
			return data.map<FilmMakerWorksSubjectRating>((e) => FilmMakerWorksSubjectRating().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerWorksSubjectRatingDetails>() is M){
			return data.map<FilmMakerWorksSubjectRatingDetails>((e) => FilmMakerWorksSubjectRatingDetails().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerWorksSubjectCast>() is M){
			return data.map<FilmMakerWorksSubjectCast>((e) => FilmMakerWorksSubjectCast().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerWorksSubjectCastsAvatars>() is M){
			return data.map<FilmMakerWorksSubjectCastsAvatars>((e) => FilmMakerWorksSubjectCastsAvatars().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerWorksSubjectDirector>() is M){
			return data.map<FilmMakerWorksSubjectDirector>((e) => FilmMakerWorksSubjectDirector().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerWorksSubjectDirectorsAvatars>() is M){
			return data.map<FilmMakerWorksSubjectDirectorsAvatars>((e) => FilmMakerWorksSubjectDirectorsAvatars().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerWorksSubjectImages>() is M){
			return data.map<FilmMakerWorksSubjectImages>((e) => FilmMakerWorksSubjectImages().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerAvatars>() is M){
			return data.map<FilmMakerAvatars>((e) => FilmMakerAvatars().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerPhoto>() is M){
			return data.map<FilmMakerPhoto>((e) => FilmMakerPhoto().fromJson(e)).toList() as M;
		}	else if(List<ArticleEntity>() is M){
			return data.map<ArticleEntity>((e) => ArticleEntity().fromJson(e)).toList() as M;
		}	else if(List<ArticleData>() is M){
			return data.map<ArticleData>((e) => ArticleData().fromJson(e)).toList() as M;
		}	else if(List<ArticleDataDate>() is M){
			return data.map<ArticleDataDate>((e) => ArticleDataDate().fromJson(e)).toList() as M;
		}	else if(List<NewsEntity>() is M){
			return data.map<NewsEntity>((e) => NewsEntity().fromJson(e)).toList() as M;
		}	else if(List<NewsResult>() is M){
			return data.map<NewsResult>((e) => NewsResult().fromJson(e)).toList() as M;
		}	else if(List<NewsResultResult>() is M){
			return data.map<NewsResultResult>((e) => NewsResultResult().fromJson(e)).toList() as M;
		}	else if(List<NewsResultResultList>() is M){
			return data.map<NewsResultResultList>((e) => NewsResultResultList().fromJson(e)).toList() as M;
		}	else if(List<RealTimeHotspotEntity>() is M){
			return data.map<RealTimeHotspotEntity>((e) => RealTimeHotspotEntity().fromJson(e)).toList() as M;
		}	else if(List<RealTimeHotspotResult>() is M){
			return data.map<RealTimeHotspotResult>((e) => RealTimeHotspotResult().fromJson(e)).toList() as M;
		}	else if(List<RealTimeHotspotResultShowapiResBody>() is M){
			return data.map<RealTimeHotspotResultShowapiResBody>((e) => RealTimeHotspotResultShowapiResBody().fromJson(e)).toList() as M;
		}	else if(List<RealTimeHotspotResultShowapiResBodyList>() is M){
			return data.map<RealTimeHotspotResultShowapiResBodyList>((e) => RealTimeHotspotResultShowapiResBodyList().fromJson(e)).toList() as M;
		}	else if(List<GifPictureJokesEntity>() is M){
			return data.map<GifPictureJokesEntity>((e) => GifPictureJokesEntity().fromJson(e)).toList() as M;
		}	else if(List<GifPictureJokesResult>() is M){
			return data.map<GifPictureJokesResult>((e) => GifPictureJokesResult().fromJson(e)).toList() as M;
		}	else if(List<GifPictureJokesResultShowapiResBody>() is M){
			return data.map<GifPictureJokesResultShowapiResBody>((e) => GifPictureJokesResultShowapiResBody().fromJson(e)).toList() as M;
		}	else if(List<GifPictureJokesResultShowapiResBodyContentlist>() is M){
			return data.map<GifPictureJokesResultShowapiResBodyContentlist>((e) => GifPictureJokesResultShowapiResBodyContentlist().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerAlbumEntity>() is M){
			return data.map<FilmMakerAlbumEntity>((e) => FilmMakerAlbumEntity().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerAlbumPhoto>() is M){
			return data.map<FilmMakerAlbumPhoto>((e) => FilmMakerAlbumPhoto().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerAlbumPhotosAuthor>() is M){
			return data.map<FilmMakerAlbumPhotosAuthor>((e) => FilmMakerAlbumPhotosAuthor().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerAlbumCelebrity>() is M){
			return data.map<FilmMakerAlbumCelebrity>((e) => FilmMakerAlbumCelebrity().fromJson(e)).toList() as M;
		}	else if(List<FilmMakerAlbumCelebrityAvatars>() is M){
			return data.map<FilmMakerAlbumCelebrityAvatars>((e) => FilmMakerAlbumCelebrityAvatars().fromJson(e)).toList() as M;
		}	else if(List<MtimeHotMovieEntity>() is M){
			return data.map<MtimeHotMovieEntity>((e) => MtimeHotMovieEntity().fromJson(e)).toList() as M;
		}	else if(List<MtimeHotMovieM>() is M){
			return data.map<MtimeHotMovieM>((e) => MtimeHotMovieM().fromJson(e)).toList() as M;
		}	else if(List<MtimeHotMovieMsVersion>() is M){
			return data.map<MtimeHotMovieMsVersion>((e) => MtimeHotMovieMsVersion().fromJson(e)).toList() as M;
		}	else if(List<MtimeHotMoviePromo>() is M){
			return data.map<MtimeHotMoviePromo>((e) => MtimeHotMoviePromo().fromJson(e)).toList() as M;
		}	else if(List<MovieCrewEntity>() is M){
			return data.map<MovieCrewEntity>((e) => MovieCrewEntity().fromJson(e)).toList() as M;
		}	else if(List<MovieCrewType>() is M){
			return data.map<MovieCrewType>((e) => MovieCrewType().fromJson(e)).toList() as M;
		}	else if(List<MovieCrewTypesPerson>() is M){
			return data.map<MovieCrewTypesPerson>((e) => MovieCrewTypesPerson().fromJson(e)).toList() as M;
		}	else if(List<MovieEntity>() is M){
			return data.map<MovieEntity>((e) => MovieEntity().fromJson(e)).toList() as M;
		}	else if(List<MovieSubject>() is M){
			return data.map<MovieSubject>((e) => MovieSubject().fromJson(e)).toList() as M;
		}	else if(List<MovieSubjectsRating>() is M){
			return data.map<MovieSubjectsRating>((e) => MovieSubjectsRating().fromJson(e)).toList() as M;
		}	else if(List<MovieSubjectsRatingDetails>() is M){
			return data.map<MovieSubjectsRatingDetails>((e) => MovieSubjectsRatingDetails().fromJson(e)).toList() as M;
		}	else if(List<MovieSubjectsCast>() is M){
			return data.map<MovieSubjectsCast>((e) => MovieSubjectsCast().fromJson(e)).toList() as M;
		}	else if(List<MovieSubjectsCastsAvatars>() is M){
			return data.map<MovieSubjectsCastsAvatars>((e) => MovieSubjectsCastsAvatars().fromJson(e)).toList() as M;
		}	else if(List<MovieSubjectsDirector>() is M){
			return data.map<MovieSubjectsDirector>((e) => MovieSubjectsDirector().fromJson(e)).toList() as M;
		}	else if(List<MovieSubjectsDirectorsAvatars>() is M){
			return data.map<MovieSubjectsDirectorsAvatars>((e) => MovieSubjectsDirectorsAvatars().fromJson(e)).toList() as M;
		}	else if(List<MovieSubjectsImages>() is M){
			return data.map<MovieSubjectsImages>((e) => MovieSubjectsImages().fromJson(e)).toList() as M;
		}
		return null;
	}

  static M fromJsonAsT<M>(json) {
    if (json is List) {
      return _getListChildType<M>(json);
    } else {
      return _fromJsonSingle<M>(json) as M;
    }
  }
}