// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
import 'package:alice/model/mobie_phone_entity.dart';
import 'package:alice/generated/json/mobie_phone_entity_helper.dart';
import 'package:alice/model/real_time_hotspot_entity.dart';
import 'package:alice/generated/json/real_time_hotspot_entity_helper.dart';
import 'package:alice/model/news_entity.dart';
import 'package:alice/generated/json/news_entity_helper.dart';
import 'package:alice/model/picture_joke_entity.dart';
import 'package:alice/generated/json/picture_joke_entity_helper.dart';
import 'package:alice/model/gif_picture_jokes_entity.dart';
import 'package:alice/generated/json/gif_picture_jokes_entity_helper.dart';
import 'package:alice/model/search_news_entity.dart';
import 'package:alice/generated/json/search_news_entity_helper.dart';
import 'package:alice/model/movie_entity.dart';
import 'package:alice/generated/json/movie_entity_helper.dart';
import 'package:alice/model/written_jokes_entity.dart';
import 'package:alice/generated/json/written_jokes_entity_helper.dart';

class JsonConvert<T> {
	T fromJson(Map<String, dynamic> json) {
		return _getFromJson<T>(runtimeType, this, json);
	}

  Map<String, dynamic> toJson() {
		return _getToJson<T>(runtimeType, this);
  }

  static _getFromJson<T>(Type type, data, json) {
    switch (type) {			case MobiePhoneEntity:
			return mobiePhoneEntityFromJson(data as MobiePhoneEntity, json) as T;			case MobiePhoneResult:
			return mobiePhoneResultFromJson(data as MobiePhoneResult, json) as T;			case MobiePhoneResultResult:
			return mobiePhoneResultResultFromJson(data as MobiePhoneResultResult, json) as T;			case RealTimeHotspotEntity:
			return realTimeHotspotEntityFromJson(data as RealTimeHotspotEntity, json) as T;			case RealTimeHotspotResult:
			return realTimeHotspotResultFromJson(data as RealTimeHotspotResult, json) as T;			case RealTimeHotspotResultShowapiResBody:
			return realTimeHotspotResultShowapiResBodyFromJson(data as RealTimeHotspotResultShowapiResBody, json) as T;			case RealTimeHotspotResultShowapiResBodyList:
			return realTimeHotspotResultShowapiResBodyListFromJson(data as RealTimeHotspotResultShowapiResBodyList, json) as T;			case NewsEntity:
			return newsEntityFromJson(data as NewsEntity, json) as T;			case NewsResult:
			return newsResultFromJson(data as NewsResult, json) as T;			case NewsResultResult:
			return newsResultResultFromJson(data as NewsResultResult, json) as T;			case NewsResultResultList:
			return newsResultResultListFromJson(data as NewsResultResultList, json) as T;			case PictureJokeEntity:
			return pictureJokeEntityFromJson(data as PictureJokeEntity, json) as T;			case PictureJokeResult:
			return pictureJokeResultFromJson(data as PictureJokeResult, json) as T;			case PictureJokeResultShowapiResBody:
			return pictureJokeResultShowapiResBodyFromJson(data as PictureJokeResultShowapiResBody, json) as T;			case PictureJokeResultShowapiResBodyContentlist:
			return pictureJokeResultShowapiResBodyContentlistFromJson(data as PictureJokeResultShowapiResBodyContentlist, json) as T;			case GifPictureJokesEntity:
			return gifPictureJokesEntityFromJson(data as GifPictureJokesEntity, json) as T;			case GifPictureJokesResult:
			return gifPictureJokesResultFromJson(data as GifPictureJokesResult, json) as T;			case GifPictureJokesResultShowapiResBody:
			return gifPictureJokesResultShowapiResBodyFromJson(data as GifPictureJokesResultShowapiResBody, json) as T;			case GifPictureJokesResultShowapiResBodyContentlist:
			return gifPictureJokesResultShowapiResBodyContentlistFromJson(data as GifPictureJokesResultShowapiResBodyContentlist, json) as T;			case SearchNewsEntity:
			return searchNewsEntityFromJson(data as SearchNewsEntity, json) as T;			case SearchNewsResult:
			return searchNewsResultFromJson(data as SearchNewsResult, json) as T;			case SearchNewsResultResult:
			return searchNewsResultResultFromJson(data as SearchNewsResultResult, json) as T;			case SearchNewsResultResultList:
			return searchNewsResultResultListFromJson(data as SearchNewsResultResultList, json) as T;			case MovieEntity:
			return movieEntityFromJson(data as MovieEntity, json) as T;			case MovieSubject:
			return movieSubjectFromJson(data as MovieSubject, json) as T;			case MovieSubjectsRating:
			return movieSubjectsRatingFromJson(data as MovieSubjectsRating, json) as T;			case MovieSubjectsRatingDetails:
			return movieSubjectsRatingDetailsFromJson(data as MovieSubjectsRatingDetails, json) as T;			case MovieSubjectsCast:
			return movieSubjectsCastFromJson(data as MovieSubjectsCast, json) as T;			case MovieSubjectsCastsAvatars:
			return movieSubjectsCastsAvatarsFromJson(data as MovieSubjectsCastsAvatars, json) as T;			case MovieSubjectsDirector:
			return movieSubjectsDirectorFromJson(data as MovieSubjectsDirector, json) as T;			case MovieSubjectsDirectorsAvatars:
			return movieSubjectsDirectorsAvatarsFromJson(data as MovieSubjectsDirectorsAvatars, json) as T;			case MovieSubjectsImages:
			return movieSubjectsImagesFromJson(data as MovieSubjectsImages, json) as T;			case WrittenJokesEntity:
			return writtenJokesEntityFromJson(data as WrittenJokesEntity, json) as T;			case WrittenJokesResult:
			return writtenJokesResultFromJson(data as WrittenJokesResult, json) as T;			case WrittenJokesResultShowapiResBody:
			return writtenJokesResultShowapiResBodyFromJson(data as WrittenJokesResultShowapiResBody, json) as T;			case WrittenJokesResultShowapiResBodyContentlist:
			return writtenJokesResultShowapiResBodyContentlistFromJson(data as WrittenJokesResultShowapiResBodyContentlist, json) as T;    }
    return data as T;
  }

  static _getToJson<T>(Type type, data) {
		switch (type) {			case MobiePhoneEntity:
			return mobiePhoneEntityToJson(data as MobiePhoneEntity);			case MobiePhoneResult:
			return mobiePhoneResultToJson(data as MobiePhoneResult);			case MobiePhoneResultResult:
			return mobiePhoneResultResultToJson(data as MobiePhoneResultResult);			case RealTimeHotspotEntity:
			return realTimeHotspotEntityToJson(data as RealTimeHotspotEntity);			case RealTimeHotspotResult:
			return realTimeHotspotResultToJson(data as RealTimeHotspotResult);			case RealTimeHotspotResultShowapiResBody:
			return realTimeHotspotResultShowapiResBodyToJson(data as RealTimeHotspotResultShowapiResBody);			case RealTimeHotspotResultShowapiResBodyList:
			return realTimeHotspotResultShowapiResBodyListToJson(data as RealTimeHotspotResultShowapiResBodyList);			case NewsEntity:
			return newsEntityToJson(data as NewsEntity);			case NewsResult:
			return newsResultToJson(data as NewsResult);			case NewsResultResult:
			return newsResultResultToJson(data as NewsResultResult);			case NewsResultResultList:
			return newsResultResultListToJson(data as NewsResultResultList);			case PictureJokeEntity:
			return pictureJokeEntityToJson(data as PictureJokeEntity);			case PictureJokeResult:
			return pictureJokeResultToJson(data as PictureJokeResult);			case PictureJokeResultShowapiResBody:
			return pictureJokeResultShowapiResBodyToJson(data as PictureJokeResultShowapiResBody);			case PictureJokeResultShowapiResBodyContentlist:
			return pictureJokeResultShowapiResBodyContentlistToJson(data as PictureJokeResultShowapiResBodyContentlist);			case GifPictureJokesEntity:
			return gifPictureJokesEntityToJson(data as GifPictureJokesEntity);			case GifPictureJokesResult:
			return gifPictureJokesResultToJson(data as GifPictureJokesResult);			case GifPictureJokesResultShowapiResBody:
			return gifPictureJokesResultShowapiResBodyToJson(data as GifPictureJokesResultShowapiResBody);			case GifPictureJokesResultShowapiResBodyContentlist:
			return gifPictureJokesResultShowapiResBodyContentlistToJson(data as GifPictureJokesResultShowapiResBodyContentlist);			case SearchNewsEntity:
			return searchNewsEntityToJson(data as SearchNewsEntity);			case SearchNewsResult:
			return searchNewsResultToJson(data as SearchNewsResult);			case SearchNewsResultResult:
			return searchNewsResultResultToJson(data as SearchNewsResultResult);			case SearchNewsResultResultList:
			return searchNewsResultResultListToJson(data as SearchNewsResultResultList);			case MovieEntity:
			return movieEntityToJson(data as MovieEntity);			case MovieSubject:
			return movieSubjectToJson(data as MovieSubject);			case MovieSubjectsRating:
			return movieSubjectsRatingToJson(data as MovieSubjectsRating);			case MovieSubjectsRatingDetails:
			return movieSubjectsRatingDetailsToJson(data as MovieSubjectsRatingDetails);			case MovieSubjectsCast:
			return movieSubjectsCastToJson(data as MovieSubjectsCast);			case MovieSubjectsCastsAvatars:
			return movieSubjectsCastsAvatarsToJson(data as MovieSubjectsCastsAvatars);			case MovieSubjectsDirector:
			return movieSubjectsDirectorToJson(data as MovieSubjectsDirector);			case MovieSubjectsDirectorsAvatars:
			return movieSubjectsDirectorsAvatarsToJson(data as MovieSubjectsDirectorsAvatars);			case MovieSubjectsImages:
			return movieSubjectsImagesToJson(data as MovieSubjectsImages);			case WrittenJokesEntity:
			return writtenJokesEntityToJson(data as WrittenJokesEntity);			case WrittenJokesResult:
			return writtenJokesResultToJson(data as WrittenJokesResult);			case WrittenJokesResultShowapiResBody:
			return writtenJokesResultShowapiResBodyToJson(data as WrittenJokesResultShowapiResBody);			case WrittenJokesResultShowapiResBodyContentlist:
			return writtenJokesResultShowapiResBodyContentlistToJson(data as WrittenJokesResultShowapiResBodyContentlist);    }
    return data as T;
  }
  //Go back to a single instance by type
  static _fromJsonSingle(String type, json) {
    switch (type) {			case 'MobiePhoneEntity':
			return MobiePhoneEntity().fromJson(json);			case 'MobiePhoneResult':
			return MobiePhoneResult().fromJson(json);			case 'MobiePhoneResultResult':
			return MobiePhoneResultResult().fromJson(json);			case 'RealTimeHotspotEntity':
			return RealTimeHotspotEntity().fromJson(json);			case 'RealTimeHotspotResult':
			return RealTimeHotspotResult().fromJson(json);			case 'RealTimeHotspotResultShowapiResBody':
			return RealTimeHotspotResultShowapiResBody().fromJson(json);			case 'RealTimeHotspotResultShowapiResBodyList':
			return RealTimeHotspotResultShowapiResBodyList().fromJson(json);			case 'NewsEntity':
			return NewsEntity().fromJson(json);			case 'NewsResult':
			return NewsResult().fromJson(json);			case 'NewsResultResult':
			return NewsResultResult().fromJson(json);			case 'NewsResultResultList':
			return NewsResultResultList().fromJson(json);			case 'PictureJokeEntity':
			return PictureJokeEntity().fromJson(json);			case 'PictureJokeResult':
			return PictureJokeResult().fromJson(json);			case 'PictureJokeResultShowapiResBody':
			return PictureJokeResultShowapiResBody().fromJson(json);			case 'PictureJokeResultShowapiResBodyContentlist':
			return PictureJokeResultShowapiResBodyContentlist().fromJson(json);			case 'GifPictureJokesEntity':
			return GifPictureJokesEntity().fromJson(json);			case 'GifPictureJokesResult':
			return GifPictureJokesResult().fromJson(json);			case 'GifPictureJokesResultShowapiResBody':
			return GifPictureJokesResultShowapiResBody().fromJson(json);			case 'GifPictureJokesResultShowapiResBodyContentlist':
			return GifPictureJokesResultShowapiResBodyContentlist().fromJson(json);			case 'SearchNewsEntity':
			return SearchNewsEntity().fromJson(json);			case 'SearchNewsResult':
			return SearchNewsResult().fromJson(json);			case 'SearchNewsResultResult':
			return SearchNewsResultResult().fromJson(json);			case 'SearchNewsResultResultList':
			return SearchNewsResultResultList().fromJson(json);			case 'MovieEntity':
			return MovieEntity().fromJson(json);			case 'MovieSubject':
			return MovieSubject().fromJson(json);			case 'MovieSubjectsRating':
			return MovieSubjectsRating().fromJson(json);			case 'MovieSubjectsRatingDetails':
			return MovieSubjectsRatingDetails().fromJson(json);			case 'MovieSubjectsCast':
			return MovieSubjectsCast().fromJson(json);			case 'MovieSubjectsCastsAvatars':
			return MovieSubjectsCastsAvatars().fromJson(json);			case 'MovieSubjectsDirector':
			return MovieSubjectsDirector().fromJson(json);			case 'MovieSubjectsDirectorsAvatars':
			return MovieSubjectsDirectorsAvatars().fromJson(json);			case 'MovieSubjectsImages':
			return MovieSubjectsImages().fromJson(json);			case 'WrittenJokesEntity':
			return WrittenJokesEntity().fromJson(json);			case 'WrittenJokesResult':
			return WrittenJokesResult().fromJson(json);			case 'WrittenJokesResultShowapiResBody':
			return WrittenJokesResultShowapiResBody().fromJson(json);			case 'WrittenJokesResultShowapiResBodyContentlist':
			return WrittenJokesResultShowapiResBodyContentlist().fromJson(json);    }
    return null;
  }

  //empty list is returned by type
  static _getListFromType(String type) {
    switch (type) {			case 'MobiePhoneEntity':
			return List<MobiePhoneEntity>();			case 'MobiePhoneResult':
			return List<MobiePhoneResult>();			case 'MobiePhoneResultResult':
			return List<MobiePhoneResultResult>();			case 'RealTimeHotspotEntity':
			return List<RealTimeHotspotEntity>();			case 'RealTimeHotspotResult':
			return List<RealTimeHotspotResult>();			case 'RealTimeHotspotResultShowapiResBody':
			return List<RealTimeHotspotResultShowapiResBody>();			case 'RealTimeHotspotResultShowapiResBodyList':
			return List<RealTimeHotspotResultShowapiResBodyList>();			case 'NewsEntity':
			return List<NewsEntity>();			case 'NewsResult':
			return List<NewsResult>();			case 'NewsResultResult':
			return List<NewsResultResult>();			case 'NewsResultResultList':
			return List<NewsResultResultList>();			case 'PictureJokeEntity':
			return List<PictureJokeEntity>();			case 'PictureJokeResult':
			return List<PictureJokeResult>();			case 'PictureJokeResultShowapiResBody':
			return List<PictureJokeResultShowapiResBody>();			case 'PictureJokeResultShowapiResBodyContentlist':
			return List<PictureJokeResultShowapiResBodyContentlist>();			case 'GifPictureJokesEntity':
			return List<GifPictureJokesEntity>();			case 'GifPictureJokesResult':
			return List<GifPictureJokesResult>();			case 'GifPictureJokesResultShowapiResBody':
			return List<GifPictureJokesResultShowapiResBody>();			case 'GifPictureJokesResultShowapiResBodyContentlist':
			return List<GifPictureJokesResultShowapiResBodyContentlist>();			case 'SearchNewsEntity':
			return List<SearchNewsEntity>();			case 'SearchNewsResult':
			return List<SearchNewsResult>();			case 'SearchNewsResultResult':
			return List<SearchNewsResultResult>();			case 'SearchNewsResultResultList':
			return List<SearchNewsResultResultList>();			case 'MovieEntity':
			return List<MovieEntity>();			case 'MovieSubject':
			return List<MovieSubject>();			case 'MovieSubjectsRating':
			return List<MovieSubjectsRating>();			case 'MovieSubjectsRatingDetails':
			return List<MovieSubjectsRatingDetails>();			case 'MovieSubjectsCast':
			return List<MovieSubjectsCast>();			case 'MovieSubjectsCastsAvatars':
			return List<MovieSubjectsCastsAvatars>();			case 'MovieSubjectsDirector':
			return List<MovieSubjectsDirector>();			case 'MovieSubjectsDirectorsAvatars':
			return List<MovieSubjectsDirectorsAvatars>();			case 'MovieSubjectsImages':
			return List<MovieSubjectsImages>();			case 'WrittenJokesEntity':
			return List<WrittenJokesEntity>();			case 'WrittenJokesResult':
			return List<WrittenJokesResult>();			case 'WrittenJokesResultShowapiResBody':
			return List<WrittenJokesResultShowapiResBody>();			case 'WrittenJokesResultShowapiResBodyContentlist':
			return List<WrittenJokesResultShowapiResBodyContentlist>();    }
    return null;
  }

  static M fromJsonAsT<M>(json) {
    String type = M.toString();
    if (json is List && type.contains("List<")) {
      String itemType = type.substring(5, type.length - 1);
      List tempList = _getListFromType(itemType);
      json.forEach((itemJson) {
        tempList
            .add(_fromJsonSingle(type.substring(5, type.length - 1), itemJson));
      });
      return tempList as M;
    } else {
      return _fromJsonSingle(M.toString(), json) as M;
    }
  }
}