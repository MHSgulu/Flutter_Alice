// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
import 'package:alice/model/recipe_classification_entity.dart';
import 'package:alice/generated/json/recipe_classification_entity_helper.dart';
import 'package:alice/model/mobie_phone_entity.dart';
import 'package:alice/generated/json/mobie_phone_entity_helper.dart';
import 'package:alice/model/wallpaper_entity.dart';
import 'package:alice/generated/json/wallpaper_entity_helper.dart';
import 'package:alice/model/bird_wallpaper_entity.dart';
import 'package:alice/generated/json/bird_wallpaper_entity_helper.dart';
import 'package:alice/model/search_news_entity.dart';
import 'package:alice/generated/json/search_news_entity_helper.dart';
import 'package:alice/model/quotation_entity.dart';
import 'package:alice/generated/json/quotation_entity_helper.dart';
import 'package:alice/model/garbage_c_a_i_entity.dart';
import 'package:alice/generated/json/garbage_c_a_i_entity_helper.dart';
import 'package:alice/model/bird_wallpaper_category_entity.dart';
import 'package:alice/generated/json/bird_wallpaper_category_entity_helper.dart';
import 'package:alice/model/short_film_review_entity.dart';
import 'package:alice/generated/json/short_film_review_entity_helper.dart';
import 'package:alice/model/picture_joke_entity.dart';
import 'package:alice/generated/json/picture_joke_entity_helper.dart';
import 'package:alice/model/written_jokes_entity.dart';
import 'package:alice/generated/json/written_jokes_entity_helper.dart';
import 'package:alice/model/wallpaper_category_entity.dart';
import 'package:alice/generated/json/wallpaper_category_entity_helper.dart';
import 'package:alice/model/m_t_movie_detail_entity.dart';
import 'package:alice/generated/json/m_t_movie_detail_entity_helper.dart';
import 'package:alice/model/hot_word_type_entity.dart';
import 'package:alice/generated/json/hot_word_type_entity_helper.dart';
import 'package:alice/model/epidemics_abroad_data_entity.dart';
import 'package:alice/generated/json/epidemics_abroad_data_entity_helper.dart';
import 'package:alice/model/hot_movie_entity.dart';
import 'package:alice/generated/json/hot_movie_entity_helper.dart';
import 'package:alice/model/article_entity.dart';
import 'package:alice/generated/json/article_entity_helper.dart';
import 'package:alice/model/news_entity.dart';
import 'package:alice/generated/json/news_entity_helper.dart';
import 'package:alice/model/real_time_hotspot_entity.dart';
import 'package:alice/generated/json/real_time_hotspot_entity_helper.dart';
import 'package:alice/model/gif_picture_jokes_entity.dart';
import 'package:alice/generated/json/gif_picture_jokes_entity_helper.dart';
import 'package:alice/model/eye_opening_video_daily_entity.dart';
import 'package:alice/generated/json/eye_opening_video_daily_entity_helper.dart';
import 'package:alice/model/today_epidemic_data_entity.dart';
import 'package:alice/generated/json/today_epidemic_data_entity_helper.dart';

class JsonConvert<T> {
	T fromJson(Map<String, dynamic> json) {
		return _getFromJson<T>(runtimeType, this, json);
	}

  Map<String, dynamic> toJson() {
		return _getToJson<T>(runtimeType, this);
  }

  static _getFromJson<T>(Type type, data, json) {
    switch (type) {
			case RecipeClassificationEntity:
				return recipeClassificationEntityFromJson(data as RecipeClassificationEntity, json) as T;
			case RecipeClassificationResult:
				return recipeClassificationResultFromJson(data as RecipeClassificationResult, json) as T;
			case RecipeClassificationResultResult:
				return recipeClassificationResultResultFromJson(data as RecipeClassificationResultResult, json) as T;
			case RecipeClassificationResultResultList:
				return recipeClassificationResultResultListFromJson(data as RecipeClassificationResultResultList, json) as T;
			case MobiePhoneEntity:
				return mobiePhoneEntityFromJson(data as MobiePhoneEntity, json) as T;
			case MobiePhoneResult:
				return mobiePhoneResultFromJson(data as MobiePhoneResult, json) as T;
			case MobiePhoneResultResult:
				return mobiePhoneResultResultFromJson(data as MobiePhoneResultResult, json) as T;
			case WallpaperEntity:
				return wallpaperEntityFromJson(data as WallpaperEntity, json) as T;
			case WallpaperRes:
				return wallpaperResFromJson(data as WallpaperRes, json) as T;
			case WallpaperResVertical:
				return wallpaperResVerticalFromJson(data as WallpaperResVertical, json) as T;
			case BirdWallpaperEntity:
				return birdWallpaperEntityFromJson(data as BirdWallpaperEntity, json) as T;
			case BirdWallpaperData:
				return birdWallpaperDataFromJson(data as BirdWallpaperData, json) as T;
			case SearchNewsEntity:
				return searchNewsEntityFromJson(data as SearchNewsEntity, json) as T;
			case SearchNewsResult:
				return searchNewsResultFromJson(data as SearchNewsResult, json) as T;
			case SearchNewsResultResult:
				return searchNewsResultResultFromJson(data as SearchNewsResultResult, json) as T;
			case SearchNewsResultResultList:
				return searchNewsResultResultListFromJson(data as SearchNewsResultResultList, json) as T;
			case QuotationEntity:
				return quotationEntityFromJson(data as QuotationEntity, json) as T;
			case QuotationShowapiResBody:
				return quotationShowapiResBodyFromJson(data as QuotationShowapiResBody, json) as T;
			case QuotationShowapiResBodyData:
				return quotationShowapiResBodyDataFromJson(data as QuotationShowapiResBodyData, json) as T;
			case GarbageCAIEntity:
				return garbageCAIEntityFromJson(data as GarbageCAIEntity, json) as T;
			case GarbageCAIResult:
				return garbageCAIResultFromJson(data as GarbageCAIResult, json) as T;
			case GarbageCAIResultResult:
				return garbageCAIResultResultFromJson(data as GarbageCAIResultResult, json) as T;
			case GarbageCAIResultResultGarbageInfo:
				return garbageCAIResultResultGarbageInfoFromJson(data as GarbageCAIResultResultGarbageInfo, json) as T;
			case BirdWallpaperCategoryEntity:
				return birdWallpaperCategoryEntityFromJson(data as BirdWallpaperCategoryEntity, json) as T;
			case BirdWallpaperCategoryData:
				return birdWallpaperCategoryDataFromJson(data as BirdWallpaperCategoryData, json) as T;
			case ShortFilmReviewEntity:
				return shortFilmReviewEntityFromJson(data as ShortFilmReviewEntity, json) as T;
			case ShortFilmReviewCommants:
				return shortFilmReviewCommantsFromJson(data as ShortFilmReviewCommants, json) as T;
			case ShortFilmReviewCommentsRating:
				return shortFilmReviewCommentsRatingFromJson(data as ShortFilmReviewCommentsRating, json) as T;
			case ShortFilmReviewCommentsAuthor:
				return shortFilmReviewCommentsAuthorFromJson(data as ShortFilmReviewCommentsAuthor, json) as T;
			case ShortFilmReviewSubject:
				return shortFilmReviewSubjectFromJson(data as ShortFilmReviewSubject, json) as T;
			case ShortFilmReviewSubjectRating:
				return shortFilmReviewSubjectRatingFromJson(data as ShortFilmReviewSubjectRating, json) as T;
			case ShortFilmReviewSubjectRatingDetails:
				return shortFilmReviewSubjectRatingDetailsFromJson(data as ShortFilmReviewSubjectRatingDetails, json) as T;
			case ShortFilmReviewSubjectCast:
				return shortFilmReviewSubjectCastFromJson(data as ShortFilmReviewSubjectCast, json) as T;
			case ShortFilmReviewSubjectCastsAvatars:
				return shortFilmReviewSubjectCastsAvatarsFromJson(data as ShortFilmReviewSubjectCastsAvatars, json) as T;
			case ShortFilmReviewSubjectDirector:
				return shortFilmReviewSubjectDirectorFromJson(data as ShortFilmReviewSubjectDirector, json) as T;
			case ShortFilmReviewSubjectDirectorsAvatars:
				return shortFilmReviewSubjectDirectorsAvatarsFromJson(data as ShortFilmReviewSubjectDirectorsAvatars, json) as T;
			case ShortFilmReviewSubjectImages:
				return shortFilmReviewSubjectImagesFromJson(data as ShortFilmReviewSubjectImages, json) as T;
			case PictureJokeEntity:
				return pictureJokeEntityFromJson(data as PictureJokeEntity, json) as T;
			case PictureJokeResult:
				return pictureJokeResultFromJson(data as PictureJokeResult, json) as T;
			case PictureJokeResultShowapiResBody:
				return pictureJokeResultShowapiResBodyFromJson(data as PictureJokeResultShowapiResBody, json) as T;
			case PictureJokeResultShowapiResBodyContentlist:
				return pictureJokeResultShowapiResBodyContentlistFromJson(data as PictureJokeResultShowapiResBodyContentlist, json) as T;
			case WrittenJokesEntity:
				return writtenJokesEntityFromJson(data as WrittenJokesEntity, json) as T;
			case WrittenJokesResult:
				return writtenJokesResultFromJson(data as WrittenJokesResult, json) as T;
			case WrittenJokesResultShowapiResBody:
				return writtenJokesResultShowapiResBodyFromJson(data as WrittenJokesResultShowapiResBody, json) as T;
			case WrittenJokesResultShowapiResBodyContentlist:
				return writtenJokesResultShowapiResBodyContentlistFromJson(data as WrittenJokesResultShowapiResBodyContentlist, json) as T;
			case WallpaperCategoryEntity:
				return wallpaperCategoryEntityFromJson(data as WallpaperCategoryEntity, json) as T;
			case WallpaperCategoryRes:
				return wallpaperCategoryResFromJson(data as WallpaperCategoryRes, json) as T;
			case WallpaperCategoryResCategory:
				return wallpaperCategoryResCategoryFromJson(data as WallpaperCategoryResCategory, json) as T;
			case MTMovieDetailEntity:
				return mTMovieDetailEntityFromJson(data as MTMovieDetailEntity, json) as T;
			case MTMovieDetailDirector:
				return mTMovieDetailDirectorFromJson(data as MTMovieDetailDirector, json) as T;
			case MTMovieDetailActorList:
				return mTMovieDetailActorListFromJson(data as MTMovieDetailActorList, json) as T;
			case MTMovieDetailStyle:
				return mTMovieDetailStyleFromJson(data as MTMovieDetailStyle, json) as T;
			case MTMovieDetailRelease:
				return mTMovieDetailReleaseFromJson(data as MTMovieDetailRelease, json) as T;
			case MTMovieDetailVideo:
				return mTMovieDetailVideoFromJson(data as MTMovieDetailVideo, json) as T;
			case HotWordTypeEntity:
				return hotWordTypeEntityFromJson(data as HotWordTypeEntity, json) as T;
			case HotWordTypeResult:
				return hotWordTypeResultFromJson(data as HotWordTypeResult, json) as T;
			case HotWordTypeResultShowapiResBody:
				return hotWordTypeResultShowapiResBodyFromJson(data as HotWordTypeResultShowapiResBody, json) as T;
			case HotWordTypeResultShowapiResBodyList:
				return hotWordTypeResultShowapiResBodyListFromJson(data as HotWordTypeResultShowapiResBodyList, json) as T;
			case HotWordTypeResultShowapiResBodyListChildList:
				return hotWordTypeResultShowapiResBodyListChildListFromJson(data as HotWordTypeResultShowapiResBodyListChildList, json) as T;
			case EpidemicsAbroadDataEntity:
				return epidemicsAbroadDataEntityFromJson(data as EpidemicsAbroadDataEntity, json) as T;
			case EpidemicsAbroadDataShowapiResBody:
				return epidemicsAbroadDataShowapiResBodyFromJson(data as EpidemicsAbroadDataShowapiResBody, json) as T;
			case EpidemicsAbroadDataShowapiResBodyForeignList:
				return epidemicsAbroadDataShowapiResBodyForeignListFromJson(data as EpidemicsAbroadDataShowapiResBodyForeignList, json) as T;
			case EpidemicsAbroadDataShowapiResBodyForeignListYesterdayIncInfo:
				return epidemicsAbroadDataShowapiResBodyForeignListYesterdayIncInfoFromJson(data as EpidemicsAbroadDataShowapiResBodyForeignListYesterdayIncInfo, json) as T;
			case EpidemicsAbroadDataShowapiResBodyForeignListIncInfo:
				return epidemicsAbroadDataShowapiResBodyForeignListIncInfoFromJson(data as EpidemicsAbroadDataShowapiResBodyForeignListIncInfo, json) as T;
			case HotMovieEntity:
				return hotMovieEntityFromJson(data as HotMovieEntity, json) as T;
			case HotMovieM:
				return hotMovieMFromJson(data as HotMovieM, json) as T;
			case HotMoviePromo:
				return hotMoviePromoFromJson(data as HotMoviePromo, json) as T;
			case ArticleEntity:
				return articleEntityFromJson(data as ArticleEntity, json) as T;
			case ArticleData:
				return articleDataFromJson(data as ArticleData, json) as T;
			case ArticleDataDate:
				return articleDataDateFromJson(data as ArticleDataDate, json) as T;
			case NewsEntity:
				return newsEntityFromJson(data as NewsEntity, json) as T;
			case NewsResult:
				return newsResultFromJson(data as NewsResult, json) as T;
			case NewsResultResult:
				return newsResultResultFromJson(data as NewsResultResult, json) as T;
			case NewsResultResultList:
				return newsResultResultListFromJson(data as NewsResultResultList, json) as T;
			case RealTimeHotspotEntity:
				return realTimeHotspotEntityFromJson(data as RealTimeHotspotEntity, json) as T;
			case RealTimeHotspotResult:
				return realTimeHotspotResultFromJson(data as RealTimeHotspotResult, json) as T;
			case RealTimeHotspotResultShowapiResBody:
				return realTimeHotspotResultShowapiResBodyFromJson(data as RealTimeHotspotResultShowapiResBody, json) as T;
			case RealTimeHotspotResultShowapiResBodyList:
				return realTimeHotspotResultShowapiResBodyListFromJson(data as RealTimeHotspotResultShowapiResBodyList, json) as T;
			case GifPictureJokesEntity:
				return gifPictureJokesEntityFromJson(data as GifPictureJokesEntity, json) as T;
			case GifPictureJokesResult:
				return gifPictureJokesResultFromJson(data as GifPictureJokesResult, json) as T;
			case GifPictureJokesResultShowapiResBody:
				return gifPictureJokesResultShowapiResBodyFromJson(data as GifPictureJokesResultShowapiResBody, json) as T;
			case GifPictureJokesResultShowapiResBodyContentlist:
				return gifPictureJokesResultShowapiResBodyContentlistFromJson(data as GifPictureJokesResultShowapiResBodyContentlist, json) as T;
			case EyeOpeningVideoDailyEntity:
				return eyeOpeningVideoDailyEntityFromJson(data as EyeOpeningVideoDailyEntity, json) as T;
			case EyeOpeningVideoDailyItemList:
				return eyeOpeningVideoDailyItemListFromJson(data as EyeOpeningVideoDailyItemList, json) as T;
			case EyeOpeningVideoDailyItemListData:
				return eyeOpeningVideoDailyItemListDataFromJson(data as EyeOpeningVideoDailyItemListData, json) as T;
			case EyeOpeningVideoDailyItemListDataTag:
				return eyeOpeningVideoDailyItemListDataTagFromJson(data as EyeOpeningVideoDailyItemListDataTag, json) as T;
			case EyeOpeningVideoDailyItemListDataConsumption:
				return eyeOpeningVideoDailyItemListDataConsumptionFromJson(data as EyeOpeningVideoDailyItemListDataConsumption, json) as T;
			case EyeOpeningVideoDailyItemListDataProvider:
				return eyeOpeningVideoDailyItemListDataProviderFromJson(data as EyeOpeningVideoDailyItemListDataProvider, json) as T;
			case EyeOpeningVideoDailyItemListDataAuthor:
				return eyeOpeningVideoDailyItemListDataAuthorFromJson(data as EyeOpeningVideoDailyItemListDataAuthor, json) as T;
			case EyeOpeningVideoDailyItemListDataAuthorFollow:
				return eyeOpeningVideoDailyItemListDataAuthorFollowFromJson(data as EyeOpeningVideoDailyItemListDataAuthorFollow, json) as T;
			case EyeOpeningVideoDailyItemListDataAuthorShield:
				return eyeOpeningVideoDailyItemListDataAuthorShieldFromJson(data as EyeOpeningVideoDailyItemListDataAuthorShield, json) as T;
			case EyeOpeningVideoDailyItemListDataCover:
				return eyeOpeningVideoDailyItemListDataCoverFromJson(data as EyeOpeningVideoDailyItemListDataCover, json) as T;
			case EyeOpeningVideoDailyItemListDataWebUrl:
				return eyeOpeningVideoDailyItemListDataWebUrlFromJson(data as EyeOpeningVideoDailyItemListDataWebUrl, json) as T;
			case EyeOpeningVideoDailyItemListDataVideoPosterBean:
				return eyeOpeningVideoDailyItemListDataVideoPosterBeanFromJson(data as EyeOpeningVideoDailyItemListDataVideoPosterBean, json) as T;
			case TodayEpidemicDataEntity:
				return todayEpidemicDataEntityFromJson(data as TodayEpidemicDataEntity, json) as T;
			case TodayEpidemicDataShowapiResBody:
				return todayEpidemicDataShowapiResBodyFromJson(data as TodayEpidemicDataShowapiResBody, json) as T;
			case TodayEpidemicDataShowapiResBodyTodayDetailList:
				return todayEpidemicDataShowapiResBodyTodayDetailListFromJson(data as TodayEpidemicDataShowapiResBodyTodayDetailList, json) as T;
			case TodayEpidemicDataShowapiResBodyTodayDetailListCityList:
				return todayEpidemicDataShowapiResBodyTodayDetailListCityListFromJson(data as TodayEpidemicDataShowapiResBodyTodayDetailListCityList, json) as T;
			case TodayEpidemicDataShowapiResBodyTodayDetailListDangerArea:
				return todayEpidemicDataShowapiResBodyTodayDetailListDangerAreaFromJson(data as TodayEpidemicDataShowapiResBodyTodayDetailListDangerArea, json) as T;
			case TodayEpidemicDataShowapiResBodyTodayStatictic:
				return todayEpidemicDataShowapiResBodyTodayStaticticFromJson(data as TodayEpidemicDataShowapiResBodyTodayStatictic, json) as T;    }
    return data as T;
  }

  static _getToJson<T>(Type type, data) {
		switch (type) {
			case RecipeClassificationEntity:
				return recipeClassificationEntityToJson(data as RecipeClassificationEntity);
			case RecipeClassificationResult:
				return recipeClassificationResultToJson(data as RecipeClassificationResult);
			case RecipeClassificationResultResult:
				return recipeClassificationResultResultToJson(data as RecipeClassificationResultResult);
			case RecipeClassificationResultResultList:
				return recipeClassificationResultResultListToJson(data as RecipeClassificationResultResultList);
			case MobiePhoneEntity:
				return mobiePhoneEntityToJson(data as MobiePhoneEntity);
			case MobiePhoneResult:
				return mobiePhoneResultToJson(data as MobiePhoneResult);
			case MobiePhoneResultResult:
				return mobiePhoneResultResultToJson(data as MobiePhoneResultResult);
			case WallpaperEntity:
				return wallpaperEntityToJson(data as WallpaperEntity);
			case WallpaperRes:
				return wallpaperResToJson(data as WallpaperRes);
			case WallpaperResVertical:
				return wallpaperResVerticalToJson(data as WallpaperResVertical);
			case BirdWallpaperEntity:
				return birdWallpaperEntityToJson(data as BirdWallpaperEntity);
			case BirdWallpaperData:
				return birdWallpaperDataToJson(data as BirdWallpaperData);
			case SearchNewsEntity:
				return searchNewsEntityToJson(data as SearchNewsEntity);
			case SearchNewsResult:
				return searchNewsResultToJson(data as SearchNewsResult);
			case SearchNewsResultResult:
				return searchNewsResultResultToJson(data as SearchNewsResultResult);
			case SearchNewsResultResultList:
				return searchNewsResultResultListToJson(data as SearchNewsResultResultList);
			case QuotationEntity:
				return quotationEntityToJson(data as QuotationEntity);
			case QuotationShowapiResBody:
				return quotationShowapiResBodyToJson(data as QuotationShowapiResBody);
			case QuotationShowapiResBodyData:
				return quotationShowapiResBodyDataToJson(data as QuotationShowapiResBodyData);
			case GarbageCAIEntity:
				return garbageCAIEntityToJson(data as GarbageCAIEntity);
			case GarbageCAIResult:
				return garbageCAIResultToJson(data as GarbageCAIResult);
			case GarbageCAIResultResult:
				return garbageCAIResultResultToJson(data as GarbageCAIResultResult);
			case GarbageCAIResultResultGarbageInfo:
				return garbageCAIResultResultGarbageInfoToJson(data as GarbageCAIResultResultGarbageInfo);
			case BirdWallpaperCategoryEntity:
				return birdWallpaperCategoryEntityToJson(data as BirdWallpaperCategoryEntity);
			case BirdWallpaperCategoryData:
				return birdWallpaperCategoryDataToJson(data as BirdWallpaperCategoryData);
			case ShortFilmReviewEntity:
				return shortFilmReviewEntityToJson(data as ShortFilmReviewEntity);
			case ShortFilmReviewCommants:
				return shortFilmReviewCommantsToJson(data as ShortFilmReviewCommants);
			case ShortFilmReviewCommentsRating:
				return shortFilmReviewCommentsRatingToJson(data as ShortFilmReviewCommentsRating);
			case ShortFilmReviewCommentsAuthor:
				return shortFilmReviewCommentsAuthorToJson(data as ShortFilmReviewCommentsAuthor);
			case ShortFilmReviewSubject:
				return shortFilmReviewSubjectToJson(data as ShortFilmReviewSubject);
			case ShortFilmReviewSubjectRating:
				return shortFilmReviewSubjectRatingToJson(data as ShortFilmReviewSubjectRating);
			case ShortFilmReviewSubjectRatingDetails:
				return shortFilmReviewSubjectRatingDetailsToJson(data as ShortFilmReviewSubjectRatingDetails);
			case ShortFilmReviewSubjectCast:
				return shortFilmReviewSubjectCastToJson(data as ShortFilmReviewSubjectCast);
			case ShortFilmReviewSubjectCastsAvatars:
				return shortFilmReviewSubjectCastsAvatarsToJson(data as ShortFilmReviewSubjectCastsAvatars);
			case ShortFilmReviewSubjectDirector:
				return shortFilmReviewSubjectDirectorToJson(data as ShortFilmReviewSubjectDirector);
			case ShortFilmReviewSubjectDirectorsAvatars:
				return shortFilmReviewSubjectDirectorsAvatarsToJson(data as ShortFilmReviewSubjectDirectorsAvatars);
			case ShortFilmReviewSubjectImages:
				return shortFilmReviewSubjectImagesToJson(data as ShortFilmReviewSubjectImages);
			case PictureJokeEntity:
				return pictureJokeEntityToJson(data as PictureJokeEntity);
			case PictureJokeResult:
				return pictureJokeResultToJson(data as PictureJokeResult);
			case PictureJokeResultShowapiResBody:
				return pictureJokeResultShowapiResBodyToJson(data as PictureJokeResultShowapiResBody);
			case PictureJokeResultShowapiResBodyContentlist:
				return pictureJokeResultShowapiResBodyContentlistToJson(data as PictureJokeResultShowapiResBodyContentlist);
			case WrittenJokesEntity:
				return writtenJokesEntityToJson(data as WrittenJokesEntity);
			case WrittenJokesResult:
				return writtenJokesResultToJson(data as WrittenJokesResult);
			case WrittenJokesResultShowapiResBody:
				return writtenJokesResultShowapiResBodyToJson(data as WrittenJokesResultShowapiResBody);
			case WrittenJokesResultShowapiResBodyContentlist:
				return writtenJokesResultShowapiResBodyContentlistToJson(data as WrittenJokesResultShowapiResBodyContentlist);
			case WallpaperCategoryEntity:
				return wallpaperCategoryEntityToJson(data as WallpaperCategoryEntity);
			case WallpaperCategoryRes:
				return wallpaperCategoryResToJson(data as WallpaperCategoryRes);
			case WallpaperCategoryResCategory:
				return wallpaperCategoryResCategoryToJson(data as WallpaperCategoryResCategory);
			case MTMovieDetailEntity:
				return mTMovieDetailEntityToJson(data as MTMovieDetailEntity);
			case MTMovieDetailDirector:
				return mTMovieDetailDirectorToJson(data as MTMovieDetailDirector);
			case MTMovieDetailActorList:
				return mTMovieDetailActorListToJson(data as MTMovieDetailActorList);
			case MTMovieDetailStyle:
				return mTMovieDetailStyleToJson(data as MTMovieDetailStyle);
			case MTMovieDetailRelease:
				return mTMovieDetailReleaseToJson(data as MTMovieDetailRelease);
			case MTMovieDetailVideo:
				return mTMovieDetailVideoToJson(data as MTMovieDetailVideo);
			case HotWordTypeEntity:
				return hotWordTypeEntityToJson(data as HotWordTypeEntity);
			case HotWordTypeResult:
				return hotWordTypeResultToJson(data as HotWordTypeResult);
			case HotWordTypeResultShowapiResBody:
				return hotWordTypeResultShowapiResBodyToJson(data as HotWordTypeResultShowapiResBody);
			case HotWordTypeResultShowapiResBodyList:
				return hotWordTypeResultShowapiResBodyListToJson(data as HotWordTypeResultShowapiResBodyList);
			case HotWordTypeResultShowapiResBodyListChildList:
				return hotWordTypeResultShowapiResBodyListChildListToJson(data as HotWordTypeResultShowapiResBodyListChildList);
			case EpidemicsAbroadDataEntity:
				return epidemicsAbroadDataEntityToJson(data as EpidemicsAbroadDataEntity);
			case EpidemicsAbroadDataShowapiResBody:
				return epidemicsAbroadDataShowapiResBodyToJson(data as EpidemicsAbroadDataShowapiResBody);
			case EpidemicsAbroadDataShowapiResBodyForeignList:
				return epidemicsAbroadDataShowapiResBodyForeignListToJson(data as EpidemicsAbroadDataShowapiResBodyForeignList);
			case EpidemicsAbroadDataShowapiResBodyForeignListYesterdayIncInfo:
				return epidemicsAbroadDataShowapiResBodyForeignListYesterdayIncInfoToJson(data as EpidemicsAbroadDataShowapiResBodyForeignListYesterdayIncInfo);
			case EpidemicsAbroadDataShowapiResBodyForeignListIncInfo:
				return epidemicsAbroadDataShowapiResBodyForeignListIncInfoToJson(data as EpidemicsAbroadDataShowapiResBodyForeignListIncInfo);
			case HotMovieEntity:
				return hotMovieEntityToJson(data as HotMovieEntity);
			case HotMovieM:
				return hotMovieMToJson(data as HotMovieM);
			case HotMoviePromo:
				return hotMoviePromoToJson(data as HotMoviePromo);
			case ArticleEntity:
				return articleEntityToJson(data as ArticleEntity);
			case ArticleData:
				return articleDataToJson(data as ArticleData);
			case ArticleDataDate:
				return articleDataDateToJson(data as ArticleDataDate);
			case NewsEntity:
				return newsEntityToJson(data as NewsEntity);
			case NewsResult:
				return newsResultToJson(data as NewsResult);
			case NewsResultResult:
				return newsResultResultToJson(data as NewsResultResult);
			case NewsResultResultList:
				return newsResultResultListToJson(data as NewsResultResultList);
			case RealTimeHotspotEntity:
				return realTimeHotspotEntityToJson(data as RealTimeHotspotEntity);
			case RealTimeHotspotResult:
				return realTimeHotspotResultToJson(data as RealTimeHotspotResult);
			case RealTimeHotspotResultShowapiResBody:
				return realTimeHotspotResultShowapiResBodyToJson(data as RealTimeHotspotResultShowapiResBody);
			case RealTimeHotspotResultShowapiResBodyList:
				return realTimeHotspotResultShowapiResBodyListToJson(data as RealTimeHotspotResultShowapiResBodyList);
			case GifPictureJokesEntity:
				return gifPictureJokesEntityToJson(data as GifPictureJokesEntity);
			case GifPictureJokesResult:
				return gifPictureJokesResultToJson(data as GifPictureJokesResult);
			case GifPictureJokesResultShowapiResBody:
				return gifPictureJokesResultShowapiResBodyToJson(data as GifPictureJokesResultShowapiResBody);
			case GifPictureJokesResultShowapiResBodyContentlist:
				return gifPictureJokesResultShowapiResBodyContentlistToJson(data as GifPictureJokesResultShowapiResBodyContentlist);
			case EyeOpeningVideoDailyEntity:
				return eyeOpeningVideoDailyEntityToJson(data as EyeOpeningVideoDailyEntity);
			case EyeOpeningVideoDailyItemList:
				return eyeOpeningVideoDailyItemListToJson(data as EyeOpeningVideoDailyItemList);
			case EyeOpeningVideoDailyItemListData:
				return eyeOpeningVideoDailyItemListDataToJson(data as EyeOpeningVideoDailyItemListData);
			case EyeOpeningVideoDailyItemListDataTag:
				return eyeOpeningVideoDailyItemListDataTagToJson(data as EyeOpeningVideoDailyItemListDataTag);
			case EyeOpeningVideoDailyItemListDataConsumption:
				return eyeOpeningVideoDailyItemListDataConsumptionToJson(data as EyeOpeningVideoDailyItemListDataConsumption);
			case EyeOpeningVideoDailyItemListDataProvider:
				return eyeOpeningVideoDailyItemListDataProviderToJson(data as EyeOpeningVideoDailyItemListDataProvider);
			case EyeOpeningVideoDailyItemListDataAuthor:
				return eyeOpeningVideoDailyItemListDataAuthorToJson(data as EyeOpeningVideoDailyItemListDataAuthor);
			case EyeOpeningVideoDailyItemListDataAuthorFollow:
				return eyeOpeningVideoDailyItemListDataAuthorFollowToJson(data as EyeOpeningVideoDailyItemListDataAuthorFollow);
			case EyeOpeningVideoDailyItemListDataAuthorShield:
				return eyeOpeningVideoDailyItemListDataAuthorShieldToJson(data as EyeOpeningVideoDailyItemListDataAuthorShield);
			case EyeOpeningVideoDailyItemListDataCover:
				return eyeOpeningVideoDailyItemListDataCoverToJson(data as EyeOpeningVideoDailyItemListDataCover);
			case EyeOpeningVideoDailyItemListDataWebUrl:
				return eyeOpeningVideoDailyItemListDataWebUrlToJson(data as EyeOpeningVideoDailyItemListDataWebUrl);
			case EyeOpeningVideoDailyItemListDataVideoPosterBean:
				return eyeOpeningVideoDailyItemListDataVideoPosterBeanToJson(data as EyeOpeningVideoDailyItemListDataVideoPosterBean);
			case TodayEpidemicDataEntity:
				return todayEpidemicDataEntityToJson(data as TodayEpidemicDataEntity);
			case TodayEpidemicDataShowapiResBody:
				return todayEpidemicDataShowapiResBodyToJson(data as TodayEpidemicDataShowapiResBody);
			case TodayEpidemicDataShowapiResBodyTodayDetailList:
				return todayEpidemicDataShowapiResBodyTodayDetailListToJson(data as TodayEpidemicDataShowapiResBodyTodayDetailList);
			case TodayEpidemicDataShowapiResBodyTodayDetailListCityList:
				return todayEpidemicDataShowapiResBodyTodayDetailListCityListToJson(data as TodayEpidemicDataShowapiResBodyTodayDetailListCityList);
			case TodayEpidemicDataShowapiResBodyTodayDetailListDangerArea:
				return todayEpidemicDataShowapiResBodyTodayDetailListDangerAreaToJson(data as TodayEpidemicDataShowapiResBodyTodayDetailListDangerArea);
			case TodayEpidemicDataShowapiResBodyTodayStatictic:
				return todayEpidemicDataShowapiResBodyTodayStaticticToJson(data as TodayEpidemicDataShowapiResBodyTodayStatictic);
			}
			return data as T;
		}
  //Go back to a single instance by type
	static _fromJsonSingle<M>( json) {
		String type = M.toString();
		if(type == (RecipeClassificationEntity).toString()){
			return RecipeClassificationEntity().fromJson(json);
		}	else if(type == (RecipeClassificationResult).toString()){
			return RecipeClassificationResult().fromJson(json);
		}	else if(type == (RecipeClassificationResultResult).toString()){
			return RecipeClassificationResultResult().fromJson(json);
		}	else if(type == (RecipeClassificationResultResultList).toString()){
			return RecipeClassificationResultResultList().fromJson(json);
		}	else if(type == (MobiePhoneEntity).toString()){
			return MobiePhoneEntity().fromJson(json);
		}	else if(type == (MobiePhoneResult).toString()){
			return MobiePhoneResult().fromJson(json);
		}	else if(type == (MobiePhoneResultResult).toString()){
			return MobiePhoneResultResult().fromJson(json);
		}	else if(type == (WallpaperEntity).toString()){
			return WallpaperEntity().fromJson(json);
		}	else if(type == (WallpaperRes).toString()){
			return WallpaperRes().fromJson(json);
		}	else if(type == (WallpaperResVertical).toString()){
			return WallpaperResVertical().fromJson(json);
		}	else if(type == (BirdWallpaperEntity).toString()){
			return BirdWallpaperEntity().fromJson(json);
		}	else if(type == (BirdWallpaperData).toString()){
			return BirdWallpaperData().fromJson(json);
		}	else if(type == (SearchNewsEntity).toString()){
			return SearchNewsEntity().fromJson(json);
		}	else if(type == (SearchNewsResult).toString()){
			return SearchNewsResult().fromJson(json);
		}	else if(type == (SearchNewsResultResult).toString()){
			return SearchNewsResultResult().fromJson(json);
		}	else if(type == (SearchNewsResultResultList).toString()){
			return SearchNewsResultResultList().fromJson(json);
		}	else if(type == (QuotationEntity).toString()){
			return QuotationEntity().fromJson(json);
		}	else if(type == (QuotationShowapiResBody).toString()){
			return QuotationShowapiResBody().fromJson(json);
		}	else if(type == (QuotationShowapiResBodyData).toString()){
			return QuotationShowapiResBodyData().fromJson(json);
		}	else if(type == (GarbageCAIEntity).toString()){
			return GarbageCAIEntity().fromJson(json);
		}	else if(type == (GarbageCAIResult).toString()){
			return GarbageCAIResult().fromJson(json);
		}	else if(type == (GarbageCAIResultResult).toString()){
			return GarbageCAIResultResult().fromJson(json);
		}	else if(type == (GarbageCAIResultResultGarbageInfo).toString()){
			return GarbageCAIResultResultGarbageInfo().fromJson(json);
		}	else if(type == (BirdWallpaperCategoryEntity).toString()){
			return BirdWallpaperCategoryEntity().fromJson(json);
		}	else if(type == (BirdWallpaperCategoryData).toString()){
			return BirdWallpaperCategoryData().fromJson(json);
		}	else if(type == (ShortFilmReviewEntity).toString()){
			return ShortFilmReviewEntity().fromJson(json);
		}	else if(type == (ShortFilmReviewCommants).toString()){
			return ShortFilmReviewCommants().fromJson(json);
		}	else if(type == (ShortFilmReviewCommentsRating).toString()){
			return ShortFilmReviewCommentsRating().fromJson(json);
		}	else if(type == (ShortFilmReviewCommentsAuthor).toString()){
			return ShortFilmReviewCommentsAuthor().fromJson(json);
		}	else if(type == (ShortFilmReviewSubject).toString()){
			return ShortFilmReviewSubject().fromJson(json);
		}	else if(type == (ShortFilmReviewSubjectRating).toString()){
			return ShortFilmReviewSubjectRating().fromJson(json);
		}	else if(type == (ShortFilmReviewSubjectRatingDetails).toString()){
			return ShortFilmReviewSubjectRatingDetails().fromJson(json);
		}	else if(type == (ShortFilmReviewSubjectCast).toString()){
			return ShortFilmReviewSubjectCast().fromJson(json);
		}	else if(type == (ShortFilmReviewSubjectCastsAvatars).toString()){
			return ShortFilmReviewSubjectCastsAvatars().fromJson(json);
		}	else if(type == (ShortFilmReviewSubjectDirector).toString()){
			return ShortFilmReviewSubjectDirector().fromJson(json);
		}	else if(type == (ShortFilmReviewSubjectDirectorsAvatars).toString()){
			return ShortFilmReviewSubjectDirectorsAvatars().fromJson(json);
		}	else if(type == (ShortFilmReviewSubjectImages).toString()){
			return ShortFilmReviewSubjectImages().fromJson(json);
		}	else if(type == (PictureJokeEntity).toString()){
			return PictureJokeEntity().fromJson(json);
		}	else if(type == (PictureJokeResult).toString()){
			return PictureJokeResult().fromJson(json);
		}	else if(type == (PictureJokeResultShowapiResBody).toString()){
			return PictureJokeResultShowapiResBody().fromJson(json);
		}	else if(type == (PictureJokeResultShowapiResBodyContentlist).toString()){
			return PictureJokeResultShowapiResBodyContentlist().fromJson(json);
		}	else if(type == (WrittenJokesEntity).toString()){
			return WrittenJokesEntity().fromJson(json);
		}	else if(type == (WrittenJokesResult).toString()){
			return WrittenJokesResult().fromJson(json);
		}	else if(type == (WrittenJokesResultShowapiResBody).toString()){
			return WrittenJokesResultShowapiResBody().fromJson(json);
		}	else if(type == (WrittenJokesResultShowapiResBodyContentlist).toString()){
			return WrittenJokesResultShowapiResBodyContentlist().fromJson(json);
		}	else if(type == (WallpaperCategoryEntity).toString()){
			return WallpaperCategoryEntity().fromJson(json);
		}	else if(type == (WallpaperCategoryRes).toString()){
			return WallpaperCategoryRes().fromJson(json);
		}	else if(type == (WallpaperCategoryResCategory).toString()){
			return WallpaperCategoryResCategory().fromJson(json);
		}	else if(type == (MTMovieDetailEntity).toString()){
			return MTMovieDetailEntity().fromJson(json);
		}	else if(type == (MTMovieDetailDirector).toString()){
			return MTMovieDetailDirector().fromJson(json);
		}	else if(type == (MTMovieDetailActorList).toString()){
			return MTMovieDetailActorList().fromJson(json);
		}	else if(type == (MTMovieDetailStyle).toString()){
			return MTMovieDetailStyle().fromJson(json);
		}	else if(type == (MTMovieDetailRelease).toString()){
			return MTMovieDetailRelease().fromJson(json);
		}	else if(type == (MTMovieDetailVideo).toString()){
			return MTMovieDetailVideo().fromJson(json);
		}	else if(type == (HotWordTypeEntity).toString()){
			return HotWordTypeEntity().fromJson(json);
		}	else if(type == (HotWordTypeResult).toString()){
			return HotWordTypeResult().fromJson(json);
		}	else if(type == (HotWordTypeResultShowapiResBody).toString()){
			return HotWordTypeResultShowapiResBody().fromJson(json);
		}	else if(type == (HotWordTypeResultShowapiResBodyList).toString()){
			return HotWordTypeResultShowapiResBodyList().fromJson(json);
		}	else if(type == (HotWordTypeResultShowapiResBodyListChildList).toString()){
			return HotWordTypeResultShowapiResBodyListChildList().fromJson(json);
		}	else if(type == (EpidemicsAbroadDataEntity).toString()){
			return EpidemicsAbroadDataEntity().fromJson(json);
		}	else if(type == (EpidemicsAbroadDataShowapiResBody).toString()){
			return EpidemicsAbroadDataShowapiResBody().fromJson(json);
		}	else if(type == (EpidemicsAbroadDataShowapiResBodyForeignList).toString()){
			return EpidemicsAbroadDataShowapiResBodyForeignList().fromJson(json);
		}	else if(type == (EpidemicsAbroadDataShowapiResBodyForeignListYesterdayIncInfo).toString()){
			return EpidemicsAbroadDataShowapiResBodyForeignListYesterdayIncInfo().fromJson(json);
		}	else if(type == (EpidemicsAbroadDataShowapiResBodyForeignListIncInfo).toString()){
			return EpidemicsAbroadDataShowapiResBodyForeignListIncInfo().fromJson(json);
		}	else if(type == (HotMovieEntity).toString()){
			return HotMovieEntity().fromJson(json);
		}	else if(type == (HotMovieM).toString()){
			return HotMovieM().fromJson(json);
		}	else if(type == (HotMoviePromo).toString()){
			return HotMoviePromo().fromJson(json);
		}	else if(type == (ArticleEntity).toString()){
			return ArticleEntity().fromJson(json);
		}	else if(type == (ArticleData).toString()){
			return ArticleData().fromJson(json);
		}	else if(type == (ArticleDataDate).toString()){
			return ArticleDataDate().fromJson(json);
		}	else if(type == (NewsEntity).toString()){
			return NewsEntity().fromJson(json);
		}	else if(type == (NewsResult).toString()){
			return NewsResult().fromJson(json);
		}	else if(type == (NewsResultResult).toString()){
			return NewsResultResult().fromJson(json);
		}	else if(type == (NewsResultResultList).toString()){
			return NewsResultResultList().fromJson(json);
		}	else if(type == (RealTimeHotspotEntity).toString()){
			return RealTimeHotspotEntity().fromJson(json);
		}	else if(type == (RealTimeHotspotResult).toString()){
			return RealTimeHotspotResult().fromJson(json);
		}	else if(type == (RealTimeHotspotResultShowapiResBody).toString()){
			return RealTimeHotspotResultShowapiResBody().fromJson(json);
		}	else if(type == (RealTimeHotspotResultShowapiResBodyList).toString()){
			return RealTimeHotspotResultShowapiResBodyList().fromJson(json);
		}	else if(type == (GifPictureJokesEntity).toString()){
			return GifPictureJokesEntity().fromJson(json);
		}	else if(type == (GifPictureJokesResult).toString()){
			return GifPictureJokesResult().fromJson(json);
		}	else if(type == (GifPictureJokesResultShowapiResBody).toString()){
			return GifPictureJokesResultShowapiResBody().fromJson(json);
		}	else if(type == (GifPictureJokesResultShowapiResBodyContentlist).toString()){
			return GifPictureJokesResultShowapiResBodyContentlist().fromJson(json);
		}	else if(type == (EyeOpeningVideoDailyEntity).toString()){
			return EyeOpeningVideoDailyEntity().fromJson(json);
		}	else if(type == (EyeOpeningVideoDailyItemList).toString()){
			return EyeOpeningVideoDailyItemList().fromJson(json);
		}	else if(type == (EyeOpeningVideoDailyItemListData).toString()){
			return EyeOpeningVideoDailyItemListData().fromJson(json);
		}	else if(type == (EyeOpeningVideoDailyItemListDataTag).toString()){
			return EyeOpeningVideoDailyItemListDataTag().fromJson(json);
		}	else if(type == (EyeOpeningVideoDailyItemListDataConsumption).toString()){
			return EyeOpeningVideoDailyItemListDataConsumption().fromJson(json);
		}	else if(type == (EyeOpeningVideoDailyItemListDataProvider).toString()){
			return EyeOpeningVideoDailyItemListDataProvider().fromJson(json);
		}	else if(type == (EyeOpeningVideoDailyItemListDataAuthor).toString()){
			return EyeOpeningVideoDailyItemListDataAuthor().fromJson(json);
		}	else if(type == (EyeOpeningVideoDailyItemListDataAuthorFollow).toString()){
			return EyeOpeningVideoDailyItemListDataAuthorFollow().fromJson(json);
		}	else if(type == (EyeOpeningVideoDailyItemListDataAuthorShield).toString()){
			return EyeOpeningVideoDailyItemListDataAuthorShield().fromJson(json);
		}	else if(type == (EyeOpeningVideoDailyItemListDataCover).toString()){
			return EyeOpeningVideoDailyItemListDataCover().fromJson(json);
		}	else if(type == (EyeOpeningVideoDailyItemListDataWebUrl).toString()){
			return EyeOpeningVideoDailyItemListDataWebUrl().fromJson(json);
		}	else if(type == (EyeOpeningVideoDailyItemListDataVideoPosterBean).toString()){
			return EyeOpeningVideoDailyItemListDataVideoPosterBean().fromJson(json);
		}	else if(type == (TodayEpidemicDataEntity).toString()){
			return TodayEpidemicDataEntity().fromJson(json);
		}	else if(type == (TodayEpidemicDataShowapiResBody).toString()){
			return TodayEpidemicDataShowapiResBody().fromJson(json);
		}	else if(type == (TodayEpidemicDataShowapiResBodyTodayDetailList).toString()){
			return TodayEpidemicDataShowapiResBodyTodayDetailList().fromJson(json);
		}	else if(type == (TodayEpidemicDataShowapiResBodyTodayDetailListCityList).toString()){
			return TodayEpidemicDataShowapiResBodyTodayDetailListCityList().fromJson(json);
		}	else if(type == (TodayEpidemicDataShowapiResBodyTodayDetailListDangerArea).toString()){
			return TodayEpidemicDataShowapiResBodyTodayDetailListDangerArea().fromJson(json);
		}	else if(type == (TodayEpidemicDataShowapiResBodyTodayStatictic).toString()){
			return TodayEpidemicDataShowapiResBodyTodayStatictic().fromJson(json);
		}	
		return null;
	}

  //list is returned by type
	static M _getListChildType<M>(List data) {
		if(<RecipeClassificationEntity>[] is M){
			return data.map<RecipeClassificationEntity>((e) => RecipeClassificationEntity().fromJson(e)).toList() as M;
		}	else if(<RecipeClassificationResult>[] is M){
			return data.map<RecipeClassificationResult>((e) => RecipeClassificationResult().fromJson(e)).toList() as M;
		}	else if(<RecipeClassificationResultResult>[] is M){
			return data.map<RecipeClassificationResultResult>((e) => RecipeClassificationResultResult().fromJson(e)).toList() as M;
		}	else if(<RecipeClassificationResultResultList>[] is M){
			return data.map<RecipeClassificationResultResultList>((e) => RecipeClassificationResultResultList().fromJson(e)).toList() as M;
		}	else if(<MobiePhoneEntity>[] is M){
			return data.map<MobiePhoneEntity>((e) => MobiePhoneEntity().fromJson(e)).toList() as M;
		}	else if(<MobiePhoneResult>[] is M){
			return data.map<MobiePhoneResult>((e) => MobiePhoneResult().fromJson(e)).toList() as M;
		}	else if(<MobiePhoneResultResult>[] is M){
			return data.map<MobiePhoneResultResult>((e) => MobiePhoneResultResult().fromJson(e)).toList() as M;
		}	else if(<WallpaperEntity>[] is M){
			return data.map<WallpaperEntity>((e) => WallpaperEntity().fromJson(e)).toList() as M;
		}	else if(<WallpaperRes>[] is M){
			return data.map<WallpaperRes>((e) => WallpaperRes().fromJson(e)).toList() as M;
		}	else if(<WallpaperResVertical>[] is M){
			return data.map<WallpaperResVertical>((e) => WallpaperResVertical().fromJson(e)).toList() as M;
		}	else if(<BirdWallpaperEntity>[] is M){
			return data.map<BirdWallpaperEntity>((e) => BirdWallpaperEntity().fromJson(e)).toList() as M;
		}	else if(<BirdWallpaperData>[] is M){
			return data.map<BirdWallpaperData>((e) => BirdWallpaperData().fromJson(e)).toList() as M;
		}	else if(<SearchNewsEntity>[] is M){
			return data.map<SearchNewsEntity>((e) => SearchNewsEntity().fromJson(e)).toList() as M;
		}	else if(<SearchNewsResult>[] is M){
			return data.map<SearchNewsResult>((e) => SearchNewsResult().fromJson(e)).toList() as M;
		}	else if(<SearchNewsResultResult>[] is M){
			return data.map<SearchNewsResultResult>((e) => SearchNewsResultResult().fromJson(e)).toList() as M;
		}	else if(<SearchNewsResultResultList>[] is M){
			return data.map<SearchNewsResultResultList>((e) => SearchNewsResultResultList().fromJson(e)).toList() as M;
		}	else if(<QuotationEntity>[] is M){
			return data.map<QuotationEntity>((e) => QuotationEntity().fromJson(e)).toList() as M;
		}	else if(<QuotationShowapiResBody>[] is M){
			return data.map<QuotationShowapiResBody>((e) => QuotationShowapiResBody().fromJson(e)).toList() as M;
		}	else if(<QuotationShowapiResBodyData>[] is M){
			return data.map<QuotationShowapiResBodyData>((e) => QuotationShowapiResBodyData().fromJson(e)).toList() as M;
		}	else if(<GarbageCAIEntity>[] is M){
			return data.map<GarbageCAIEntity>((e) => GarbageCAIEntity().fromJson(e)).toList() as M;
		}	else if(<GarbageCAIResult>[] is M){
			return data.map<GarbageCAIResult>((e) => GarbageCAIResult().fromJson(e)).toList() as M;
		}	else if(<GarbageCAIResultResult>[] is M){
			return data.map<GarbageCAIResultResult>((e) => GarbageCAIResultResult().fromJson(e)).toList() as M;
		}	else if(<GarbageCAIResultResultGarbageInfo>[] is M){
			return data.map<GarbageCAIResultResultGarbageInfo>((e) => GarbageCAIResultResultGarbageInfo().fromJson(e)).toList() as M;
		}	else if(<BirdWallpaperCategoryEntity>[] is M){
			return data.map<BirdWallpaperCategoryEntity>((e) => BirdWallpaperCategoryEntity().fromJson(e)).toList() as M;
		}	else if(<BirdWallpaperCategoryData>[] is M){
			return data.map<BirdWallpaperCategoryData>((e) => BirdWallpaperCategoryData().fromJson(e)).toList() as M;
		}	else if(<ShortFilmReviewEntity>[] is M){
			return data.map<ShortFilmReviewEntity>((e) => ShortFilmReviewEntity().fromJson(e)).toList() as M;
		}	else if(<ShortFilmReviewCommants>[] is M){
			return data.map<ShortFilmReviewCommants>((e) => ShortFilmReviewCommants().fromJson(e)).toList() as M;
		}	else if(<ShortFilmReviewCommentsRating>[] is M){
			return data.map<ShortFilmReviewCommentsRating>((e) => ShortFilmReviewCommentsRating().fromJson(e)).toList() as M;
		}	else if(<ShortFilmReviewCommentsAuthor>[] is M){
			return data.map<ShortFilmReviewCommentsAuthor>((e) => ShortFilmReviewCommentsAuthor().fromJson(e)).toList() as M;
		}	else if(<ShortFilmReviewSubject>[] is M){
			return data.map<ShortFilmReviewSubject>((e) => ShortFilmReviewSubject().fromJson(e)).toList() as M;
		}	else if(<ShortFilmReviewSubjectRating>[] is M){
			return data.map<ShortFilmReviewSubjectRating>((e) => ShortFilmReviewSubjectRating().fromJson(e)).toList() as M;
		}	else if(<ShortFilmReviewSubjectRatingDetails>[] is M){
			return data.map<ShortFilmReviewSubjectRatingDetails>((e) => ShortFilmReviewSubjectRatingDetails().fromJson(e)).toList() as M;
		}	else if(<ShortFilmReviewSubjectCast>[] is M){
			return data.map<ShortFilmReviewSubjectCast>((e) => ShortFilmReviewSubjectCast().fromJson(e)).toList() as M;
		}	else if(<ShortFilmReviewSubjectCastsAvatars>[] is M){
			return data.map<ShortFilmReviewSubjectCastsAvatars>((e) => ShortFilmReviewSubjectCastsAvatars().fromJson(e)).toList() as M;
		}	else if(<ShortFilmReviewSubjectDirector>[] is M){
			return data.map<ShortFilmReviewSubjectDirector>((e) => ShortFilmReviewSubjectDirector().fromJson(e)).toList() as M;
		}	else if(<ShortFilmReviewSubjectDirectorsAvatars>[] is M){
			return data.map<ShortFilmReviewSubjectDirectorsAvatars>((e) => ShortFilmReviewSubjectDirectorsAvatars().fromJson(e)).toList() as M;
		}	else if(<ShortFilmReviewSubjectImages>[] is M){
			return data.map<ShortFilmReviewSubjectImages>((e) => ShortFilmReviewSubjectImages().fromJson(e)).toList() as M;
		}	else if(<PictureJokeEntity>[] is M){
			return data.map<PictureJokeEntity>((e) => PictureJokeEntity().fromJson(e)).toList() as M;
		}	else if(<PictureJokeResult>[] is M){
			return data.map<PictureJokeResult>((e) => PictureJokeResult().fromJson(e)).toList() as M;
		}	else if(<PictureJokeResultShowapiResBody>[] is M){
			return data.map<PictureJokeResultShowapiResBody>((e) => PictureJokeResultShowapiResBody().fromJson(e)).toList() as M;
		}	else if(<PictureJokeResultShowapiResBodyContentlist>[] is M){
			return data.map<PictureJokeResultShowapiResBodyContentlist>((e) => PictureJokeResultShowapiResBodyContentlist().fromJson(e)).toList() as M;
		}	else if(<WrittenJokesEntity>[] is M){
			return data.map<WrittenJokesEntity>((e) => WrittenJokesEntity().fromJson(e)).toList() as M;
		}	else if(<WrittenJokesResult>[] is M){
			return data.map<WrittenJokesResult>((e) => WrittenJokesResult().fromJson(e)).toList() as M;
		}	else if(<WrittenJokesResultShowapiResBody>[] is M){
			return data.map<WrittenJokesResultShowapiResBody>((e) => WrittenJokesResultShowapiResBody().fromJson(e)).toList() as M;
		}	else if(<WrittenJokesResultShowapiResBodyContentlist>[] is M){
			return data.map<WrittenJokesResultShowapiResBodyContentlist>((e) => WrittenJokesResultShowapiResBodyContentlist().fromJson(e)).toList() as M;
		}	else if(<WallpaperCategoryEntity>[] is M){
			return data.map<WallpaperCategoryEntity>((e) => WallpaperCategoryEntity().fromJson(e)).toList() as M;
		}	else if(<WallpaperCategoryRes>[] is M){
			return data.map<WallpaperCategoryRes>((e) => WallpaperCategoryRes().fromJson(e)).toList() as M;
		}	else if(<WallpaperCategoryResCategory>[] is M){
			return data.map<WallpaperCategoryResCategory>((e) => WallpaperCategoryResCategory().fromJson(e)).toList() as M;
		}	else if(<MTMovieDetailEntity>[] is M){
			return data.map<MTMovieDetailEntity>((e) => MTMovieDetailEntity().fromJson(e)).toList() as M;
		}	else if(<MTMovieDetailDirector>[] is M){
			return data.map<MTMovieDetailDirector>((e) => MTMovieDetailDirector().fromJson(e)).toList() as M;
		}	else if(<MTMovieDetailActorList>[] is M){
			return data.map<MTMovieDetailActorList>((e) => MTMovieDetailActorList().fromJson(e)).toList() as M;
		}	else if(<MTMovieDetailStyle>[] is M){
			return data.map<MTMovieDetailStyle>((e) => MTMovieDetailStyle().fromJson(e)).toList() as M;
		}	else if(<MTMovieDetailRelease>[] is M){
			return data.map<MTMovieDetailRelease>((e) => MTMovieDetailRelease().fromJson(e)).toList() as M;
		}	else if(<MTMovieDetailVideo>[] is M){
			return data.map<MTMovieDetailVideo>((e) => MTMovieDetailVideo().fromJson(e)).toList() as M;
		}	else if(<HotWordTypeEntity>[] is M){
			return data.map<HotWordTypeEntity>((e) => HotWordTypeEntity().fromJson(e)).toList() as M;
		}	else if(<HotWordTypeResult>[] is M){
			return data.map<HotWordTypeResult>((e) => HotWordTypeResult().fromJson(e)).toList() as M;
		}	else if(<HotWordTypeResultShowapiResBody>[] is M){
			return data.map<HotWordTypeResultShowapiResBody>((e) => HotWordTypeResultShowapiResBody().fromJson(e)).toList() as M;
		}	else if(<HotWordTypeResultShowapiResBodyList>[] is M){
			return data.map<HotWordTypeResultShowapiResBodyList>((e) => HotWordTypeResultShowapiResBodyList().fromJson(e)).toList() as M;
		}	else if(<HotWordTypeResultShowapiResBodyListChildList>[] is M){
			return data.map<HotWordTypeResultShowapiResBodyListChildList>((e) => HotWordTypeResultShowapiResBodyListChildList().fromJson(e)).toList() as M;
		}	else if(<EpidemicsAbroadDataEntity>[] is M){
			return data.map<EpidemicsAbroadDataEntity>((e) => EpidemicsAbroadDataEntity().fromJson(e)).toList() as M;
		}	else if(<EpidemicsAbroadDataShowapiResBody>[] is M){
			return data.map<EpidemicsAbroadDataShowapiResBody>((e) => EpidemicsAbroadDataShowapiResBody().fromJson(e)).toList() as M;
		}	else if(<EpidemicsAbroadDataShowapiResBodyForeignList>[] is M){
			return data.map<EpidemicsAbroadDataShowapiResBodyForeignList>((e) => EpidemicsAbroadDataShowapiResBodyForeignList().fromJson(e)).toList() as M;
		}	else if(<EpidemicsAbroadDataShowapiResBodyForeignListYesterdayIncInfo>[] is M){
			return data.map<EpidemicsAbroadDataShowapiResBodyForeignListYesterdayIncInfo>((e) => EpidemicsAbroadDataShowapiResBodyForeignListYesterdayIncInfo().fromJson(e)).toList() as M;
		}	else if(<EpidemicsAbroadDataShowapiResBodyForeignListIncInfo>[] is M){
			return data.map<EpidemicsAbroadDataShowapiResBodyForeignListIncInfo>((e) => EpidemicsAbroadDataShowapiResBodyForeignListIncInfo().fromJson(e)).toList() as M;
		}	else if(<HotMovieEntity>[] is M){
			return data.map<HotMovieEntity>((e) => HotMovieEntity().fromJson(e)).toList() as M;
		}	else if(<HotMovieM>[] is M){
			return data.map<HotMovieM>((e) => HotMovieM().fromJson(e)).toList() as M;
		}	else if(<HotMoviePromo>[] is M){
			return data.map<HotMoviePromo>((e) => HotMoviePromo().fromJson(e)).toList() as M;
		}	else if(<ArticleEntity>[] is M){
			return data.map<ArticleEntity>((e) => ArticleEntity().fromJson(e)).toList() as M;
		}	else if(<ArticleData>[] is M){
			return data.map<ArticleData>((e) => ArticleData().fromJson(e)).toList() as M;
		}	else if(<ArticleDataDate>[] is M){
			return data.map<ArticleDataDate>((e) => ArticleDataDate().fromJson(e)).toList() as M;
		}	else if(<NewsEntity>[] is M){
			return data.map<NewsEntity>((e) => NewsEntity().fromJson(e)).toList() as M;
		}	else if(<NewsResult>[] is M){
			return data.map<NewsResult>((e) => NewsResult().fromJson(e)).toList() as M;
		}	else if(<NewsResultResult>[] is M){
			return data.map<NewsResultResult>((e) => NewsResultResult().fromJson(e)).toList() as M;
		}	else if(<NewsResultResultList>[] is M){
			return data.map<NewsResultResultList>((e) => NewsResultResultList().fromJson(e)).toList() as M;
		}	else if(<RealTimeHotspotEntity>[] is M){
			return data.map<RealTimeHotspotEntity>((e) => RealTimeHotspotEntity().fromJson(e)).toList() as M;
		}	else if(<RealTimeHotspotResult>[] is M){
			return data.map<RealTimeHotspotResult>((e) => RealTimeHotspotResult().fromJson(e)).toList() as M;
		}	else if(<RealTimeHotspotResultShowapiResBody>[] is M){
			return data.map<RealTimeHotspotResultShowapiResBody>((e) => RealTimeHotspotResultShowapiResBody().fromJson(e)).toList() as M;
		}	else if(<RealTimeHotspotResultShowapiResBodyList>[] is M){
			return data.map<RealTimeHotspotResultShowapiResBodyList>((e) => RealTimeHotspotResultShowapiResBodyList().fromJson(e)).toList() as M;
		}	else if(<GifPictureJokesEntity>[] is M){
			return data.map<GifPictureJokesEntity>((e) => GifPictureJokesEntity().fromJson(e)).toList() as M;
		}	else if(<GifPictureJokesResult>[] is M){
			return data.map<GifPictureJokesResult>((e) => GifPictureJokesResult().fromJson(e)).toList() as M;
		}	else if(<GifPictureJokesResultShowapiResBody>[] is M){
			return data.map<GifPictureJokesResultShowapiResBody>((e) => GifPictureJokesResultShowapiResBody().fromJson(e)).toList() as M;
		}	else if(<GifPictureJokesResultShowapiResBodyContentlist>[] is M){
			return data.map<GifPictureJokesResultShowapiResBodyContentlist>((e) => GifPictureJokesResultShowapiResBodyContentlist().fromJson(e)).toList() as M;
		}	else if(<EyeOpeningVideoDailyEntity>[] is M){
			return data.map<EyeOpeningVideoDailyEntity>((e) => EyeOpeningVideoDailyEntity().fromJson(e)).toList() as M;
		}	else if(<EyeOpeningVideoDailyItemList>[] is M){
			return data.map<EyeOpeningVideoDailyItemList>((e) => EyeOpeningVideoDailyItemList().fromJson(e)).toList() as M;
		}	else if(<EyeOpeningVideoDailyItemListData>[] is M){
			return data.map<EyeOpeningVideoDailyItemListData>((e) => EyeOpeningVideoDailyItemListData().fromJson(e)).toList() as M;
		}	else if(<EyeOpeningVideoDailyItemListDataTag>[] is M){
			return data.map<EyeOpeningVideoDailyItemListDataTag>((e) => EyeOpeningVideoDailyItemListDataTag().fromJson(e)).toList() as M;
		}	else if(<EyeOpeningVideoDailyItemListDataConsumption>[] is M){
			return data.map<EyeOpeningVideoDailyItemListDataConsumption>((e) => EyeOpeningVideoDailyItemListDataConsumption().fromJson(e)).toList() as M;
		}	else if(<EyeOpeningVideoDailyItemListDataProvider>[] is M){
			return data.map<EyeOpeningVideoDailyItemListDataProvider>((e) => EyeOpeningVideoDailyItemListDataProvider().fromJson(e)).toList() as M;
		}	else if(<EyeOpeningVideoDailyItemListDataAuthor>[] is M){
			return data.map<EyeOpeningVideoDailyItemListDataAuthor>((e) => EyeOpeningVideoDailyItemListDataAuthor().fromJson(e)).toList() as M;
		}	else if(<EyeOpeningVideoDailyItemListDataAuthorFollow>[] is M){
			return data.map<EyeOpeningVideoDailyItemListDataAuthorFollow>((e) => EyeOpeningVideoDailyItemListDataAuthorFollow().fromJson(e)).toList() as M;
		}	else if(<EyeOpeningVideoDailyItemListDataAuthorShield>[] is M){
			return data.map<EyeOpeningVideoDailyItemListDataAuthorShield>((e) => EyeOpeningVideoDailyItemListDataAuthorShield().fromJson(e)).toList() as M;
		}	else if(<EyeOpeningVideoDailyItemListDataCover>[] is M){
			return data.map<EyeOpeningVideoDailyItemListDataCover>((e) => EyeOpeningVideoDailyItemListDataCover().fromJson(e)).toList() as M;
		}	else if(<EyeOpeningVideoDailyItemListDataWebUrl>[] is M){
			return data.map<EyeOpeningVideoDailyItemListDataWebUrl>((e) => EyeOpeningVideoDailyItemListDataWebUrl().fromJson(e)).toList() as M;
		}	else if(<EyeOpeningVideoDailyItemListDataVideoPosterBean>[] is M){
			return data.map<EyeOpeningVideoDailyItemListDataVideoPosterBean>((e) => EyeOpeningVideoDailyItemListDataVideoPosterBean().fromJson(e)).toList() as M;
		}	else if(<TodayEpidemicDataEntity>[] is M){
			return data.map<TodayEpidemicDataEntity>((e) => TodayEpidemicDataEntity().fromJson(e)).toList() as M;
		}	else if(<TodayEpidemicDataShowapiResBody>[] is M){
			return data.map<TodayEpidemicDataShowapiResBody>((e) => TodayEpidemicDataShowapiResBody().fromJson(e)).toList() as M;
		}	else if(<TodayEpidemicDataShowapiResBodyTodayDetailList>[] is M){
			return data.map<TodayEpidemicDataShowapiResBodyTodayDetailList>((e) => TodayEpidemicDataShowapiResBodyTodayDetailList().fromJson(e)).toList() as M;
		}	else if(<TodayEpidemicDataShowapiResBodyTodayDetailListCityList>[] is M){
			return data.map<TodayEpidemicDataShowapiResBodyTodayDetailListCityList>((e) => TodayEpidemicDataShowapiResBodyTodayDetailListCityList().fromJson(e)).toList() as M;
		}	else if(<TodayEpidemicDataShowapiResBodyTodayDetailListDangerArea>[] is M){
			return data.map<TodayEpidemicDataShowapiResBodyTodayDetailListDangerArea>((e) => TodayEpidemicDataShowapiResBodyTodayDetailListDangerArea().fromJson(e)).toList() as M;
		}	else if(<TodayEpidemicDataShowapiResBodyTodayStatictic>[] is M){
			return data.map<TodayEpidemicDataShowapiResBodyTodayStatictic>((e) => TodayEpidemicDataShowapiResBodyTodayStatictic().fromJson(e)).toList() as M;
		}
		return null;
	}

  static M fromJsonAsT<M>(json) {
    if (json is List) {
      return _getListChildType<M>(json);
    } else {
      return _fromJsonSingle<M>(json) as M;
    }
  }
}