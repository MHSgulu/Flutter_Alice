<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.ow.alice">

    <!--io.flutter.app.FlutterApplication是一个android.app.Application
    调用FlutterMain.startInitialization（this）; 在其onCreate方法中。
    在大多数情况下，您可以保持原样，但是如果您想提供其他功能，可以继承或重新实现FlutterApplication，然后将自定义类放在此处即可-->

    <uses-permission android:name="android.permission.INTERNET" />

    <application
        android:name="io.flutter.app.FlutterApplication"
        android:icon="@mipmap/app_logo"
        android:label="Alice">
        <activity
            android:name=".MainActivity"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
            android:hardwareAccelerated="true"
            android:launchMode="singleTop"
            android:theme="@style/LaunchTheme"
            android:windowSoftInputMode="adjustResize">
            <!-- 指定一个Android主题，以在Android进程启动后立即应用于此活动。
                 Flutter UI初始化时，使用该主题可见。
                 之后，此主题将继续确定Flutter UI背后的Window背景。 -->
            <meta-data
                android:name="io.flutter.embedding.android.NormalTheme"
                android:resource="@style/NormalTheme"
                />
            <!-- 显示一个Android View，该视图继续显示启动屏幕Drawable，直到Flutter绘制其第一帧，然后该初始屏幕淡出。
                 闪屏对于避免Android启动屏幕的末尾与Flutter第一帧的绘画之间的视觉间隙很有用。 -->
            <meta-data
                android:name="io.flutter.embedding.android.SplashScreenDrawable"
                android:resource="@drawable/launch_background"
                />
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <!-- 不要删除下面的元数据 这是Flutter工具用来生成 GeneratedPluginRegistrant.java -->
        <meta-data
            android:name="flutterEmbedding"
            android:value="2" />
    </application>
</manifest>
