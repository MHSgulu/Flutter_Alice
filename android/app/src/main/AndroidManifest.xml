<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.ow.alice">

    <!--io.flutter.app.FlutterApplication是一个android.app.Application调用FlutterMain.startInitialization（this）; 在其onCreate方法中。
    在大多数情况下，您可以保持原样，但是如果您想提供其他功能，可以继承或重新实现FlutterApplication，然后将自定义类放在此处即可-->

    <uses-permission android:name="android.permission.USE_FINGERPRINT" /><!--指纹-->

    <!--互联网权限不会影响`permission_handler`插件，但是如果您的应用需要访问互联网，则必须提供互联网权限.-->
    <uses-permission android:name="android.permission.INTERNET" />

    <!-- “联系人”组的权限选项 -->
    <uses-permission android:name="android.permission.READ_CONTACTS" />
    <uses-permission android:name="android.permission.WRITE_CONTACTS" />
    <uses-permission android:name="android.permission.GET_ACCOUNTS" />

    <!-- storage`组的权限选项 -->
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />

    <!-- “相机”组的权限选项 -->
    <uses-permission android:name="android.permission.CAMERA" />

    <!-- `sms`组的权限选项 -->
    <uses-permission android:name="android.permission.SEND_SMS" />
    <uses-permission android:name="android.permission.RECEIVE_SMS" />
    <uses-permission android:name="android.permission.READ_SMS" />
    <uses-permission android:name="android.permission.RECEIVE_WAP_PUSH" />
    <uses-permission android:name="android.permission.RECEIVE_MMS" />

    <!-- “电话”组的权限选项 -->
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.CALL_PHONE" />
    <uses-permission android:name="android.permission.ADD_VOICEMAIL" />
    <uses-permission android:name="android.permission.USE_SIP" />
    <uses-permission android:name="android.permission.READ_CALL_LOG" />
    <uses-permission android:name="android.permission.WRITE_CALL_LOG" />
    <uses-permission android:name="android.permission.BIND_CALL_REDIRECTION_SERVICE" />

    <!-- “日历”组的权限选项 -->
    <uses-permission android:name="android.permission.READ_CALENDAR" />
    <uses-permission android:name="android.permission.WRITE_CALENDAR" />

    <!-- `location`组的权限选项 -->
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_BACKGROUND_LOCATION" />

    <!-- “麦克风”或“语音”组的权限选项 -->
    <uses-permission android:name="android.permission.RECORD_AUDIO" />

    <!-- “传感器”组的权限选项 -->
    <uses-permission android:name="android.permission.BODY_SENSORS" />

    <!-- `accessMediaLocation`组的权限选项 -->
    <uses-permission android:name="android.permission.ACCESS_MEDIA_LOCATION" />

    <!-- `activityRecognition`组的权限选项 -->
    <uses-permission android:name="android.permission.ACTIVITY_RECOGNITION" />

    <!-- `ignoreBatteryOptimizations`组的权限选项 -->
    <uses-permission android:name="android.permission.REQUEST_IGNORE_BATTERY_OPTIMIZATIONS" />

    <application
        android:name="io.flutter.app.FlutterApplication"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:usesCleartextTraffic="true"
        tools:targetApi="m">
        <activity
            android:name=".MainActivity"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
            android:hardwareAccelerated="true"
            android:launchMode="singleTop"
            android:theme="@style/LaunchTheme"
            android:windowSoftInputMode="adjustResize">
            <!-- 指定一个Android主题，以在Android进程启动后立即应用于此活动。
                 Flutter UI初始化时，使用该主题可见。
                 之后，此主题将继续确定Flutter UI背后的Window背景。 -->
            <meta-data
                android:name="io.flutter.embedding.android.NormalTheme"
                android:resource="@style/NormalTheme" />
            <!-- 显示一个Android View，该视图继续显示启动屏幕Drawable，直到Flutter绘制其第一帧，然后该初始屏幕淡出。
                 闪屏对于避免Android启动屏幕的末尾与Flutter第一帧的绘画之间的视觉间隙很有用。 -->
            <meta-data
                android:name="io.flutter.embedding.android.SplashScreenDrawable"
                android:resource="@drawable/launch_background" />
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <!-- 不要删除下面的元数据 这是Flutter工具用来生成 GeneratedPluginRegistrant.java -->
        <meta-data
            android:name="flutterEmbedding"
            android:value="2" />
        <!-- 百度地图 -->
        <meta-data
            android:name="com.baidu.lbsapi.API_KEY"
            android:value="tf3bUxEDYet06xMtM2UMnV1fgTRgD9Qa" />

        <!--应用更新-->
        <provider
            android:name="sk.fourq.otaupdate.OtaUpdateFileProvider"
            android:authorities="${applicationId}.ota_update_provider"
            android:exported="false"
            android:grantUriPermissions="true">
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/filepaths" />
        </provider>

    </application>
</manifest>
